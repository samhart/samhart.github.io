{
  "apiVersion" : "1",
  "swaggerVersion" : "1.2",
  "basePath" : "/appsvcs/svc/rs/",
  "resourcePath" : "/agents",
  "apis" : [ {
    "path" : "/agents",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getAgents",
      "type" : "array",
      "items" : {
        "$ref" : "AgentInfo"
      },
      "parameters" : [ {
        "type" : "integer",
        "format" : "int32",
        "description" : "Index to select, starting with 0 (zero).",
        "paramType" : "query",
        "name" : "from"
      }, {
        "type" : "integer",
        "format" : "int32",
        "description" : "Maximum number to return (0=all).",
        "paramType" : "query",
        "name" : "limit"
      } ],
      "summary" : "Returns information about all agents in the domain.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getAgent",
      "type" : "AgentInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns information about an agent.",
      "notes" : "\n\n        Agents may request information about any agent in the domain, including themselves.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/active_skills",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getActiveSkills",
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns the list of active skill groups for the agent's session.",
      "notes" : "\n\n        This method returns the list of skill groups that were activated when the agent session was created.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "PUT",
      "nickname" : "setActiveSkills",
      "type" : "array",
      "items" : {
        "type" : "string"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "array",
        "description" : "List of identifiers of skills to activate.",
        "items" : {
          "type" : "string"
        },
        "paramType" : "body",
        "name" : "skills",
        "required" : true
      } ],
      "summary" : "Selects given skill groups to be active for the agent's session.",
      "notes" : "\n\n        The active skill groups must be a subset of the assigned skill groups {@link getActiveSkills(String)}.\n        The method is not to be called if skills are activated automatically. This happens if the agent either does not\n        have permission to manage availability by skill ({@link PermissionEnum#CAN_MANAGE_SKILL_AVAILABILITY})\n        or has switched off manual skill selection ({@link AgentOptions#SHOW_SELECT_SKILLS}).",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/add_number_to_dnc",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "addNumberToDNC",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "NonEmptyStringValue",
        "description" : "Number to add to the DNC list: {@link NonEmptyStringValue}.",
        "paramType" : "body",
        "name" : "number",
        "required" : true
      } ],
      "summary" : "Adds a phone number to the DNC list.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/agent_groups",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getAgentGroups",
      "type" : "array",
      "items" : {
        "$ref" : "AgentGroupInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns the list of agent groups to which the agent belongs.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/avatar",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getAvatar",
      "type" : "StreamingOutput",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns the agent's avatar in PNG format.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "image/png" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/callbacks",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getCallbacks",
      "type" : "array",
      "items" : {
        "$ref" : "CallbackInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "integer",
        "format" : "int64",
        "description" : "Optional earliest date: {@link CallbackInfo#dueDate due date}. If absent, no oldest date exists.",
        "paramType" : "query",
        "name" : "fromDate"
      }, {
        "type" : "integer",
        "format" : "int64",
        "description" : "Optional latest date: {@link CallbackInfo#dueDate due date}. If absent, no most recent date exists.",
        "paramType" : "query",
        "name" : "toDate"
      }, {
        "type" : "boolean",
        "description" : "True to include completed callbacks. False to exclude them. The parameter is optional.\n                                                By default, completed callbacks are included.",
        "paramType" : "query",
        "name" : "includeCompleted"
      } ],
      "summary" : "Returns a list of scheduled callbacks.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "POST",
      "nickname" : "addCallback",
      "type" : "CallbackInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "CallbackInfo",
        "description" : "Information about the callback: {@link CallbackInfo}.\n                                        The value of {@link CallbackInfo#id} field is ignored.",
        "paramType" : "body",
        "name" : "callback",
        "required" : true
      } ],
      "summary" : "Schedules a callback.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/callbacks/snooze",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getCallbacksState",
      "type" : "CallbackStatesInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns callbacks state info (snooze, dismiss).",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/callbacks/{callbackId}",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "updateCallback",
      "type" : "CallbackInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the callback.",
        "paramType" : "path",
        "name" : "callbackId",
        "required" : true
      }, {
        "type" : "CallbackInfo",
        "description" : "Callback information to update: {@link CallbackInfo}. In the id field,\n                                                enter the same callback ID as in the callbackId argument.",
        "paramType" : "body",
        "name" : "callback",
        "required" : true
      } ],
      "summary" : "Updates a scheduled callback.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "DELETE",
      "nickname" : "removeCallback",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the callback.",
        "paramType" : "path",
        "name" : "callbackId",
        "required" : true
      } ],
      "summary" : "Deletes a callback.",
      "notes" : "\n\n        The method is applicable to any callback, processed or not processed.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/callbacks/{callbackId}/dismiss",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "dismissCallback",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the callback.",
        "paramType" : "path",
        "name" : "callbackId",
        "required" : true
      } ],
      "summary" : "Dismisses a callback.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/callbacks/{callbackId}/make_call",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "makeCallback",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the callback.",
        "paramType" : "path",
        "name" : "callbackId",
        "required" : true
      }, {
        "type" : "BooleanValue",
        "description" : "flag to skip DNC check.",
        "paramType" : "body",
        "name" : "skipDNCCheck",
        "required" : true
      } ],
      "summary" : "Makes a callback.<br/>\n        Result is returned in notification AgentEvents#EVENT_CALLBACK_CREATED.<br/>",
      "notes" : "Makes a callback.<br/>\n        Result is returned in notification {@link AgentEvents#EVENT_CALLBACK_CREATED}.<br/>",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/callbacks/{callbackId}/snooze",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "snoozeCallback",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the callback.",
        "paramType" : "path",
        "name" : "callbackId",
        "required" : true
      }, {
        "type" : "NonNullLongValue",
        "description" : "mark callback being snoozed till that time stamp (in msecs)",
        "paramType" : "body",
        "name" : "tillTimeStamp",
        "required" : true
      } ],
      "summary" : "Snoozes a callback.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/campaign/{campaignId}/field_views",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getCampaignFieldViews",
      "type" : "array",
      "items" : {
        "$ref" : "FieldViewInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the campaign.",
        "paramType" : "path",
        "name" : "campaignId",
        "required" : true
      } ],
      "summary" : "Returns a field layout for a campaign.",
      "notes" : " The client is assumed to use the layout when representing interaction data\n        to the user. The layout is applicable to any interaction from that campaign, such a call, skill voicemail, etc.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/campaigns",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getDestinationCampaigns",
      "type" : "array",
      "items" : {
        "$ref" : "CampaignInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns a list of campaigns that could receive a call.",
      "notes" : "\n\n        The agent uses this list to select a destination of a call transfer, or select a conference participant to add to\n        a call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/campaigns_config",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getCampaignsConfig",
      "type" : "CampaignsConfigInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Tells which campaigns are available for the agent to select when making a manual call, and in some other cases.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/can_stop_session",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "canLogout",
      "type" : "array",
      "items" : {
        "$ref" : "LogoutRestriction"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Checks if the agent is allowed to log out.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/channels",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getChannels",
      "type" : "array",
      "items" : {
        "$ref" : "ChannelInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns the info of channels available to the agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/conferee_agents",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getConfereeAgents",
      "type" : "array",
      "items" : {
        "$ref" : "AgentInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "integer",
        "format" : "int32",
        "description" : "Starting index to select. 0 (zero) means the very first item.",
        "paramType" : "query",
        "name" : "from"
      }, {
        "type" : "integer",
        "format" : "int32",
        "description" : "Maximum number to return. To return all available agents, use 0 (zero).",
        "paramType" : "query",
        "name" : "limit"
      } ],
      "summary" : "Returns a list of agents that can be potentially added to a call as participants.",
      "notes" : "\n        <p>\n        The agent uses this list to select another agent when adding a conference participant to a call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/contact/field_views",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getContactFieldViews",
      "type" : "array",
      "items" : {
        "$ref" : "FieldViewInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns a contact field layout.",
      "notes" : " The client is assumed to use this layout whenever represents full data of a\n        contact to the user.\n        <p>\n        The layout corresponds to the agent's user profile:\n        <ul>\n        <li> User profile with a defined fields layout: this layout is returned.\n        <li> No user profile or a profile without a defined fields layout: the default layout is returned.\n        </ul>",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/customer_portal",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getCustomerPortal",
      "type" : "CustomerPortalInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Gets customer portal information to make the login request to VCC web server.<br/>",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/dashboard/subscriptions",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "dashboardGetSubscriptions",
      "type" : "array",
      "items" : {
        "$ref" : "DashboardSubscriptionInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Gets available dashboard subscriptions",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "POST",
      "nickname" : "dashboardAddSubscription",
      "type" : "DashboardSubscriptionInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "DashboardSubscriptionInfo",
        "paramType" : "body",
        "name" : "info",
        "required" : true
      } ],
      "summary" : "Adds new subscription for gamification statistics.",
      "notes" : "\n        Responses with new subscription info. Will send new data for subscription ASAP.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/dashboard/subscriptions/{subscriptionId}",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "dashboardUpdateSubscription",
      "type" : "DashboardSubscriptionInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "subscriptionId",
        "required" : true
      }, {
        "type" : "DashboardSubscriptionInfo",
        "description" : "subscription parameters",
        "paramType" : "body",
        "name" : "subscriptionInfo",
        "required" : true
      } ],
      "summary" : "Changes data subscription.",
      "notes" : "\n        Updates existing data subscription by subscription id.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "DELETE",
      "nickname" : "dashboardDeleteSubscription",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "subscriptionId",
        "required" : true
      } ],
      "summary" : "Deletes subscription.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/echo_call",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "makeEchoCall",
      "type" : "EchoCallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Makes an echo call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "DELETE",
      "nickname" : "cancelEchoCall",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Cancels an echo call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "GET",
      "nickname" : "getEchoCall",
      "type" : "EchoCallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns information about an echo call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/gamification",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "subscribeToGamification",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Subscribes this agent to statistics",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "DELETE",
      "nickname" : "unsubscribeToGamification",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/help_request",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "sendHelpRequest",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "HelpRequestDestinationInfo",
        "description" : "filter for supervisors/administrators",
        "paramType" : "body",
        "name" : "destination",
        "required" : true
      } ],
      "summary" : "Sends help request.<br/>",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/history",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "createAgentHistoryView",
      "type" : "InteractionHistoryViewInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "InteractionHistoryViewOptions",
        "description" : "view options",
        "paramType" : "body",
        "name" : "options",
        "required" : true
      } ],
      "summary" : "Creates an agent activities history view resource.",
      "notes" : " This resource is used to iterate over agent history.\n        View represents a subset of records selected by specified options.\n        This methods returns initial view state with first selected records.\n        If returned {@link InteractionHistoryViewInfo#hasMore} is true\n        use {@link #iterateAgentHistoryView(String, String)} to get next records.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/history/{viewId}/next",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "iterateAgentHistoryView",
      "type" : "InteractionHistoryViewInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "view id",
        "paramType" : "path",
        "name" : "viewId",
        "required" : true
      } ],
      "summary" : "Fetches next n records from history view.",
      "notes" : " 'n' is <= {@lnk InteractionHistoryViewOptions#limit}.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "getSocialItems",
      "type" : "void",
      "parameters" : [ {
        "type" : "integer",
        "format" : "int64",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Starts the flow of email, chat, and social interactions to the agent.",
      "notes" : "\n        This method apply to call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "GET",
      "nickname" : "getInteractions",
      "type" : "array",
      "items" : {
        "$ref" : "InteractionInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns a list of interactions in which the agent is taking part.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getCalls",
      "type" : "array",
      "items" : {
        "$ref" : "CallInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns a list of calls to be processed by the agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getCallInfo",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Returns information about a call currently processed by the agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/active_contact",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "setCallActiveContact",
      "type" : "StringValue",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "call id",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "NonEmptyStringValue",
        "description" : "contact id",
        "paramType" : "body",
        "name" : "contactId",
        "required" : true
      } ],
      "summary" : "Updates call active contact",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/add_agent_to_conference",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "addConferenceAgentParticipant",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "ConferenceInternalParticipantInfo",
        "description" : "Information about the agent participant: {@link ConferenceInternalParticipantInfo}.",
        "paramType" : "body",
        "name" : "participant",
        "required" : true
      } ],
      "summary" : "Adds another agent to a conference call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/add_campaign_to_conference",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "addConferenceCampaignParticipant",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "ConferenceCampaignParticipantInfo",
        "description" : "Information about the campaign participant: {@link ConferenceCampaignParticipantInfo}.",
        "paramType" : "body",
        "name" : "participant",
        "required" : true
      } ],
      "summary" : "Adds a campaign participant to a conference call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/add_external_to_conference",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "addConferenceExternalParticipant",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "ConferenceExternalParticipantInfo",
        "description" : "Information about the external participant: {@link ConferenceExternalParticipantInfo}.",
        "paramType" : "body",
        "name" : "participant",
        "required" : true
      } ],
      "summary" : "Adds an external participant to an active call.",
      "notes" : "\n\n        The call becomes a conference after you have added the participant.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/add_skill_to_conference",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "addConferenceSkillParticipant",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "ConferenceInternalParticipantInfo",
        "description" : "Information about the skill group: {@link ConferenceInternalParticipantInfo}.",
        "paramType" : "body",
        "name" : "participant",
        "required" : true
      } ],
      "summary" : "Adds a skill group to a conference call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/add_speed_dial_to_conference",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "addConferenceSpeedDialParticipant",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "ConferenceSpeedDialParticipantInfo",
        "description" : "Information about the speed dial participant: {@link ConferenceSpeedDialParticipantInfo}.",
        "paramType" : "body",
        "name" : "participant",
        "required" : true
      } ],
      "summary" : "Adds a participant with a speed dial number to a conference call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/answer",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "answerCall",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Accepts an offered call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/audio",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getAudioFiles",
      "type" : "CallAudioFileInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Returns the available audio files for the current call.",
      "notes" : "\n\n        To change the audio files, send a call update event with the {@link CallNotifyReason#UPDATED UPDATED} reason.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/audio/player",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getAudioPlayerState",
      "type" : "PlayerStateInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Returns audio player state",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/audio/player/pause",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "pauseAudioPlaying",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Pauses playback of an audio prompt or IVR recording for the call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/audio/player/play_prompt",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "playAudioPrompt",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "NonEmptyStringValue",
        "description" : "ID of the prompt to play.",
        "paramType" : "body",
        "name" : "promptId",
        "required" : true
      } ],
      "summary" : "Plays a skill audio prompt for the call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/audio/player/play_recording",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "playAudioRecording",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "NonEmptyStringValue",
        "description" : "ID of the IVR recording to play.",
        "paramType" : "body",
        "name" : "recordingId",
        "required" : true
      } ],
      "summary" : "Plays an audio IVR audio recording for the call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/audio/player/resume",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "resumeAudioPlaying",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Resumes a paused audio file for the call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/audio/player/stop",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "stopAudioPlaying",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Stops an audio file for the call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/aux_data",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "setCallAuxData",
      "type" : "StringValue",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "call id",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "StringValue",
        "description" : "string value of an auxiliary data",
        "paramType" : "body",
        "name" : "auxData",
        "required" : true
      } ],
      "summary" : "Updates call auxiliary data required for 3rd party integration",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "GET",
      "nickname" : "getCallAuxData",
      "type" : "StringValue",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "call id",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Returns call auxiliary data",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/cancel_transfer",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "cancelTransfer",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the transferred call.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Cancels an incomplete warm transfer.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/comments",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "setCallComment",
      "type" : "StringValue",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "call id",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "StringValue",
        "description" : "new comments",
        "paramType" : "body",
        "name" : "comments",
        "required" : true
      } ],
      "summary" : "Updates call comments",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/complete_transfer",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "completeTransfer",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the transferred call.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Completes a warm transfer.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/complete_warm_conference",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "completeConference",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Completes a warm conference.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/contacts",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getCallContacts",
      "type" : "ContactLookupResultInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Object used to navigate through contacts.\n                                                <ul>\n                                <li>For the first query, use the cursor value obtained from {@link CallInfo#contactLookupResult}.\n                                <li>For subsequent queries, use the cursor value from the previously returned {@link ContactLookupResultInfo}.\n                                                </ul>",
        "paramType" : "query",
        "name" : "cursor"
      } ],
      "summary" : "Returns the contacts matching the call.",
      "notes" : "\n        You might need this method if the exact contact of a third-party call is not known. In this case, the phone\n        number is looked up in the contact database and the result is provided to you as\n        {@link CallInfo#contactLookupResult}. The result can contain no contacts, one contact or multiple contacts.\n        In case of multiple contacts, it contains up to 20 of them. You can retrieve others with the given method.\n        This method is only applicable to an active call.\n        For other kinds of calls, the method always returns an empty result.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "POST",
      "nickname" : "createCallContact",
      "type" : "ContactInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "ContactInfo",
        "description" : "Contact information to create: {@link ContactInfo}.",
        "paramType" : "body",
        "name" : "info",
        "required" : true
      } ],
      "summary" : "Creates a contact associated with the call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/contacts/{contactId}",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getCallContact",
      "type" : "ContactInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the contact.",
        "paramType" : "path",
        "name" : "contactId",
        "required" : true
      } ],
      "summary" : "Returns the ID of the contact associated with the call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "PUT",
      "nickname" : "updateCallContact",
      "type" : "ContactInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the contact.",
        "paramType" : "path",
        "name" : "contactId",
        "required" : true
      }, {
        "type" : "ContactInfo",
        "description" : "Contact information to update. {@link ContactInfo#fields} should contain all modified fields.\n        The client is allowed not to send unmodified fields. Values of the missed fields will remain as they are.\n        To set the value of a field to null, the client should explicitly set null to it.",
        "paramType" : "body",
        "name" : "info",
        "required" : true
      } ],
      "summary" : "Updates a contact associated with the call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/disconnect",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "disconnectCall",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Disconnects the current call for all participants.",
      "notes" : "\n\n        This method applies to all participants, including conference participants.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/disconnectConferenceParticipant",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "disconnectConferenceParticipant",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Disconnects a conference participant.",
      "notes" : "\n\n        Use this method to remove either the original party or a participant added later to the conference by passing the\n        call ID of the person that you want to remove. As a result, a person is disconnected from the conference, but the\n        others remain in the conference.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/dispose",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "setCallDisposition",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "DisposeOptionsInfo",
        "description" : "Disposition options: {@link DisposeOptionsInfo}.",
        "paramType" : "body",
        "name" : "options",
        "required" : true
      } ],
      "summary" : "Sets the disposition for the call.",
      "notes" : "\n\n        If the disposition has a {@link DispositionFlag#MUST_CONFIRM MUST_CONFIRM} flag, the client should show a\n        confirmation dialogue to the agent. If the agent confirms the disposition, the disposition is set.\n        Otherwise, the client should not set the disposition.\n        <p>\n        If the call is associated with a preview session, the call is not necessarily finalized. If the disposition is\n        a non-final one, the call might be set to the {@link CallState#WRAP_UP WRAP_UP} state. In this case, the preview\n        is set to {@link PreviewState#RENEWING RENEWING}. The server remembers the <code>options</code> parameter in\n        order to apply the disposition later when the call is actually finalized. If the disposition is a final one, both\n        the call and the preview are finalized immediately.\n        For more information about preview sessions, see {@link getPreview(String, String)}.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/hold",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "holdCall",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the call to place on hold.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Places an active call on hold.",
      "notes" : "\n\n        This method does not apply to test calls.\n        The call must be in the {@link CallState#TALKING} state.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/leave_conference",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "leaveConference",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "LeaveConferenceInfo",
        "description" : "Information about leaving the conference: {@link LeaveConferenceInfo}.",
        "paramType" : "body",
        "name" : "options",
        "required" : true
      } ],
      "summary" : "Leaves a conference call.",
      "notes" : "\n\n        Leaving a conference that contains more than 3 parties is not supported.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/manual_connectors",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getCallManualConnectors",
      "type" : "array",
      "items" : {
        "$ref" : "ManualConnectorInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Returns a list of connectors that the agent may manually launch during the call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/manual_connectors/{connectorId}/execute",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "processCallManualConnector",
      "type" : "PendingConnectorInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the manual connector.",
        "paramType" : "path",
        "name" : "connectorId",
        "required" : true
      } ],
      "summary" : "Creates a pending connector for the given manual connector.",
      "notes" : " The method returns the newly created pending\n        connector and sends a notification about its creation as well.\n\n        Use this method when an agent wants to launch a connector during a call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/park",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "parkCall",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the call to be parked.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Parks a call.",
      "notes" : "\n\n        Use this method to park an active call that is not a conference, or to park a conference extra participant.\n        You cannot park the original participant of a conference call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/pause_recording",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "pauseRecording",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Pauses the recording of a call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/reject",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "rejectCall",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Rejects an offered call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/resume_recording",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "resumeRecording",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Resumes the paused recording of a call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/retrieve",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "retrieveCall",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the parked call.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Retrieves a parked call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/start_recording",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "startRecording",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Starts to record a call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/stop_recording",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "stopRecording",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Stops to record a call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/transfer_to_agent",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "transferCallToAgent",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "AgentTransferDestinationInfo",
        "description" : "Information about the transfer: {@link AgentTransferDestinationInfo}.",
        "paramType" : "body",
        "name" : "destination",
        "required" : true
      } ],
      "summary" : "Transfers a call to another agent.",
      "notes" : "\n\n        This method applies to either an active or parked call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/transfer_to_call",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "transferParkedCallToParkedCall",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the parked call to transfer.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "StringValue",
        "description" : "ID of the destination parked call: {@link StringValue}.",
        "paramType" : "body",
        "name" : "destinationCallId",
        "required" : true
      } ],
      "summary" : "Transfers a parked call to another parked call.",
      "notes" : "\n\n        This method applies only to parked calls.\n        To transfer calls that are not parked, see all other transfer methods.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/transfer_to_campaign",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "transferCallToCampaign",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "CampaignTransferDestinationInfo",
        "description" : "Information about the transfer: {@link CampaignTransferDestinationInfo}.",
        "paramType" : "body",
        "name" : "destination",
        "required" : true
      } ],
      "summary" : "Transfers a call to a campaign.",
      "notes" : "\n\n        This method applies to either an active or parked call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/transfer_to_external_number",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "transferCallToExternalDestination",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "ExternalTransferDestinationInfo",
        "description" : "Information about the external destination: {@link ExternalTransferDestinationInfo}.",
        "paramType" : "body",
        "name" : "destination",
        "required" : true
      } ],
      "summary" : "Transfers a call to an external number.",
      "notes" : "\n\n        This method applies to either an active or parked call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/transfer_to_skill",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "transferCallToSkills",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "SkillTransferDestinationInfo",
        "description" : "Information about the transfer: {@link SkillTransferDestinationInfo}.",
        "paramType" : "body",
        "name" : "destination",
        "required" : true
      } ],
      "summary" : "Transfers a call to a skill group.",
      "notes" : "\n\n        This method applies to either an active or parked call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/transfer_to_speed_dial",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "transferCallToSpeedDial",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Call ID.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "SpeedDialTransferDestinationInfo",
        "description" : "Information about the speed dial number: {@link SpeedDialTransferDestinationInfo}.",
        "paramType" : "body",
        "name" : "destination",
        "required" : true
      } ],
      "summary" : "Transfers a call to a speed dial number.",
      "notes" : "\n\n        This method applies to either an active or parked call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/unhold",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "unholdCall",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the call to take off hold.",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Takes a call off hold.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/variables",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "setCallVariables",
      "type" : "SecureMap",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "call id",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "SecureMap",
        "description" : "call variable values",
        "paramType" : "body",
        "name" : "callVariables",
        "required" : true
      } ],
      "summary" : "Updates call variables.",
      "notes" : "\n        The client is allowed not to send unmodified variables. Values of the missed variables will remain as they are.\n        To set the value of a variable to null, the client should explicitly set null to it.\n        If a variable is read-only or not visible to the agent according to {@link #getCampaignFieldViews(String, String)}, its update is ignored.\n        If a variable is system, its update is ignored as well.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{callId}/worksheet",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "setCallWorksheet",
      "type" : "WorksheetInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "call id",
        "paramType" : "path",
        "name" : "callId",
        "required" : true
      }, {
        "type" : "WorksheetInfo",
        "description" : "worksheet information",
        "paramType" : "body",
        "name" : "worksheetInfo",
        "required" : true
      } ],
      "summary" : "Updates call worksheet",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/calls/{parkedCallId}/add_to_conference",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "addParkedCallToConference",
      "type" : "CallInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the parked call.",
        "paramType" : "path",
        "name" : "parkedCallId",
        "required" : true
      }, {
        "type" : "StringValue",
        "description" : "ID of current call to add parked call to as a conferee",
        "paramType" : "body",
        "name" : "callId",
        "required" : true
      } ],
      "summary" : "Adds a parked call to a conference call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/chat/{interactionId}/acknowledge",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "chatAcknowledge",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "AgentChatBody",
        "paramType" : "body",
        "name" : "agentChatBody",
        "required" : true
      } ],
      "summary" : "Acknowledges a chat message for an agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/chat/{interactionId}/add_users",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "chatAddUsers",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "AddChatUsersBody",
        "paramType" : "body",
        "name" : "addChatUsersBody",
        "required" : true
      } ],
      "summary" : "Adds an agent to a chat conference.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/chat/{interactionId}/change_owner",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "chatChangeUser",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "ChatOwnerBody",
        "paramType" : "body",
        "name" : "chatOwnerBody",
        "required" : true
      } ],
      "summary" : "Changes a chat's owner to another agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/chat/{interactionId}/message",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "chatMessage",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "AgentChatBody",
        "paramType" : "body",
        "name" : "agentChatBod",
        "required" : true
      } ],
      "summary" : "Sends a chat message for an agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/chat/{interactionId}/remove_users",
    "operations" : [ {
      "method" : "DELETE",
      "nickname" : "chatRemoveUsers",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "RemoveChatUsersBody",
        "paramType" : "body",
        "name" : "removeChatUsersBody",
        "required" : true
      } ],
      "summary" : "Removes an agent from a chat conference.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/chat/{interactionId}/terminate",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "chatTerminate",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "AgentChatBody",
        "paramType" : "body",
        "name" : "agentChatBody",
        "required" : true
      } ],
      "summary" : "Ends a chat for an agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/chat/{interactionId}/transfer",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "chatTransfer",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "TransferToAgentBody",
        "paramType" : "body",
        "name" : "transferToAgentBody",
        "required" : true
      } ],
      "summary" : "Transfers a chat from one agent to another.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/chat/{interactionId}/typing",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "chatTyping",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "AgentChatBody",
        "paramType" : "body",
        "name" : "agentChatBody",
        "required" : true
      } ],
      "summary" : "Sends a typing notification during a chat for an agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/client_chat/{interactionId}",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "clientChat",
      "type" : "ProfileSurvey",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "ChatRequestBody",
        "paramType" : "body",
        "name" : "chatRequestBody",
        "required" : true
      } ],
      "summary" : "Requests a chat for an anonymous agent (chat user).",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/client_chat/{interactionId}/acknowledge",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "clientChatAcknowledge",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "AgentChatBody",
        "paramType" : "body",
        "name" : "agentChatBody",
        "required" : true
      } ],
      "summary" : "Acknowledges a message for an anonymous agent (chat user).",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/client_chat/{interactionId}/message",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "clientChatMessage",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "AgentChatBody",
        "paramType" : "body",
        "name" : "agentChatBod",
        "required" : true
      } ],
      "summary" : "Sends a chat message for an anonymous agent (chat user).",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/client_chat/{interactionId}/terminate",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "clientChatTerminate",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "AgentChatBody",
        "paramType" : "body",
        "name" : "agentChatBody",
        "required" : true
      } ],
      "summary" : "Ends a chat for an anonymous agent (chat user).",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/client_chat/{interactionId}/typing",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "clientChatTyping",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "AgentChatBody",
        "paramType" : "body",
        "name" : "agentChatBody",
        "required" : true
      } ],
      "summary" : "Sends a typing notification for an anonymous agent (chat user).",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/email/attachments",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "uploadEmailAttachment",
      "type" : "EmailAttachmentInfo",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "Attachment",
        "paramType" : "body",
        "name" : "file",
        "required" : true
      } ],
      "summary" : "Uploads an attachment for an outbound email.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "multipart/form-data" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/email/outbound",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "sendEmail",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "SendEmailBody",
        "paramType" : "body",
        "name" : "sendEmailBody",
        "required" : true
      } ],
      "summary" : "Sends an outbound email from an agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/email/{interactionId}/reply",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "replyToEmail",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "ReplyToEmailBody",
        "paramType" : "body",
        "name" : "replyToBody",
        "required" : true
      } ],
      "summary" : "Sends a reply to an email interaction.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/make_agent_call",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "makeCallToAgent",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "AgentCallDestinationInfo",
        "description" : "Destination and options for the call: {@link AgentCallDestinationInfo}.",
        "paramType" : "body",
        "name" : "destination",
        "required" : true
      } ],
      "summary" : "Calls another agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/make_external_call",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "makeExternalCall",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "ExternalCallDestinationInfo",
        "description" : "Destination and options for the call: {@link ExternalCallDestinationInfo}.",
        "paramType" : "body",
        "name" : "destination",
        "required" : true
      } ],
      "summary" : "Calls an external number.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/make_skill_call",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "makeCallToSkill",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "SkillCallDestinationInfo",
        "description" : "Destination and options for the call: {@link SkillCallDestinationInfo}.",
        "paramType" : "body",
        "name" : "destination",
        "required" : true
      } ],
      "summary" : "Calls a skill group.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/make_speed_dial_call",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "makeCallToSpeedDial",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "SpeedDialCallDestinationInfo",
        "description" : "Destination and options for the call: {@link SpeedDialCallDestinationInfo}.",
        "paramType" : "body",
        "name" : "destination",
        "required" : true
      } ],
      "summary" : "Calls by using speed dial.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/make_test_call",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "makeTestCall",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Makes a test call.<br/>\n        Result is sent in notification AgentEvents#EVENT_CALL_CREATED.<br/>",
      "notes" : "Makes a test call.<br/>\n        Result is sent in notification {@link AgentEvents#EVENT_CALL_CREATED}.<br/>",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/social/outbound",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "sendSocial",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "SendSocialBody",
        "paramType" : "body",
        "name" : "sendSocialBody",
        "required" : true
      } ],
      "summary" : "Sends an outbound social posting from an agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/social/{interactionId}/history",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "replyToHistory",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "ReplyToHistory",
        "paramType" : "body",
        "name" : "replyToBody",
        "required" : true
      } ],
      "summary" : "Posts a reply to a historical social interaction.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/social/{interactionId}/reply",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "replyToSocial",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "ReplyToSocialBody",
        "paramType" : "body",
        "name" : "replyToBody",
        "required" : true
      } ],
      "summary" : "Posts a reply to a social interaction.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/voicemails",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getVoicemails",
      "type" : "VoicemailLookupResultInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Marker that contains the position of the current search. Set cursor to null in order to\n                                                retrieve the first portion of voicemails. Then you can retrieve the next portion by\n                                                calling the method with cursor = {@link VoicemailLookupResultInfo#cursor}. You can\n                                                continue until the method returns a number of messages less than pageSize.",
        "paramType" : "query",
        "name" : "cursor"
      }, {
        "type" : "integer",
        "format" : "int32",
        "description" : "Number of messages to return. The default value is 50. The maximum is 300. Note that\n                                                actually the method can return up to <code>pageSize + 1</code> messages.",
        "paramType" : "query",
        "name" : "pageSize"
      } ],
      "summary" : "Returns the voicemail messages of the agent.",
      "notes" : "\n\n        Both kinds of voicemails are included, personal voicemails and a skill one.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/voicemails/count_info",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getPersonalVoicemailCount",
      "type" : "VoicemailCountInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Counts personal voicemail messages of the agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/voicemails/{voicemailId}",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getVoicemail",
      "type" : "VoicemailInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the voicemail message.",
        "paramType" : "path",
        "name" : "voicemailId",
        "required" : true
      } ],
      "summary" : "Returns information about a voicemail message of the agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "PUT",
      "nickname" : "updateVoicemail",
      "type" : "VoicemailInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the voicemail message.",
        "paramType" : "path",
        "name" : "voicemailId",
        "required" : true
      }, {
        "type" : "VoicemailInfo",
        "description" : "Voicemail information to update: {@link VoicemailInfo}. In the id field,\n                                                enter the same voicemail ID as in the voicemailId argument.",
        "paramType" : "body",
        "name" : "voicemail",
        "required" : true
      } ],
      "summary" : "Updates voicemail information.",
      "notes" : "\n\n        For a skill voicemail message, only comments can be updated. It is allowed to update a skill voicemail only if\n        it has {@link VoicemailInfo#state} = {@link VoicemailState#PROCESSING}.\n        For a personal voicemail message, comments and number fields can be updated. A logged-in agent can update\n        their personal voicemail at any time.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "DELETE",
      "nickname" : "removeVoicemail",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the voicemail message.",
        "paramType" : "path",
        "name" : "voicemailId",
        "required" : true
      } ],
      "summary" : "Deletes a voicemail message.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/voicemails/{voicemailId}/accept",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "acceptSkillVoicemail",
      "type" : "VoicemailInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the voicemail message.",
        "paramType" : "path",
        "name" : "voicemailId",
        "required" : true
      } ],
      "summary" : "Accepts a skill voicemail message offered to the agent.",
      "notes" : "\n        The message must have {@link VoicemailInfo#state} = {@link VoicemailState#NEW}.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/voicemails/{voicemailId}/active_contact",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "setVoicemailActiveContact",
      "type" : "VoicemailInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the voicemail message.",
        "paramType" : "path",
        "name" : "voicemailId",
        "required" : true
      }, {
        "type" : "NonEmptyStringValue",
        "description" : "ID of the contact: {@link NonEmptyStringValue}.",
        "paramType" : "body",
        "name" : "contactId",
        "required" : true
      } ],
      "summary" : "Selects the contact associated with the voicemail message.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/voicemails/{voicemailId}/contacts",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getVoicemailContacts",
      "type" : "ContactLookupResultInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the voicemail message.",
        "paramType" : "path",
        "name" : "voicemailId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Object used to navigate through contacts:\n                                        <ul>\n                                                <li> For the first query, use the cursor value obtained from {@link VoicemailInfo#contactLookupResult}.\n                                        <li> For subsequent queries, use the cursor value from the previously returned {@link ContactLookupResultInfo}.\n                                                </ul>",
        "paramType" : "query",
        "name" : "cursor"
      } ],
      "summary" : "Returns the contacts matching the voicemail message.",
      "notes" : "\n        For more details, see an analogous method for a call, {@link #getCallContacts}.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/voicemails/{voicemailId}/mark_as_read",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "markVoicemailAsRead",
      "type" : "VoicemailInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the voicemail message.",
        "paramType" : "path",
        "name" : "voicemailId",
        "required" : true
      } ],
      "summary" : "Marks a personal voicemail message read.",
      "notes" : "\n\n        After performing this action, the number of new voicemail messages decreases.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/voicemails/{voicemailId}/recordings/{recordingId}",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getVoicemailRecordingStreamResponse",
      "type" : "Response",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the voicemail message.",
        "paramType" : "path",
        "name" : "voicemailId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the recording in voicemail.",
        "paramType" : "path",
        "name" : "recordingId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "header",
        "name" : "range"
      }, {
        "type" : "boolean",
        "paramType" : "query",
        "name" : "download"
      } ],
      "summary" : "Returns a recording stream of a voicemail.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/octet-stream" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/voicemails/{voicemailId}/reject",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "rejectSkillVoicemail",
      "type" : "VoicemailInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the voicemail message.",
        "paramType" : "path",
        "name" : "voicemailId",
        "required" : true
      } ],
      "summary" : "Rejects a skill voicemail message offered to the agent.",
      "notes" : "\n        The message must have {@link VoicemailInfo#state} = {@link VoicemailState#NEW}.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/voicemails/{voicemailId}/return_call",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "returnCall",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the voicemail message.",
        "paramType" : "path",
        "name" : "voicemailId",
        "required" : true
      }, {
        "type" : "ReturnCallExternalOptionInfo",
        "description" : "Options for returning an external call: {@link ReturnCallExternalOptionInfo}.\n                                        This parameter is ignored for internal voicemail messages. In this case, it may be null\n                                        or whatever.",
        "paramType" : "body",
        "name" : "externalOptions",
        "required" : true
      } ],
      "summary" : "Returns a call to the person who left a voicemail.<br/>\n        Result is sent in notification AgentEvents#EVENT_CALL_CREATED.<br/>",
      "notes" : "Returns a call to the person who left a voicemail.<br/>\n        Result is sent in notification {@link AgentEvents#EVENT_CALL_CREATED}.<br/>",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/voicemails/{voicemailId}/transfer",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "transferVoicemail",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the voicemail message.",
        "paramType" : "path",
        "name" : "voicemailId",
        "required" : true
      }, {
        "type" : "VoicemailTransferDestinationInfo",
        "description" : "Information about the transfer destination: {@link VoicemailTransferDestinationInfo}.",
        "paramType" : "body",
        "name" : "transferInfo",
        "required" : true
      } ],
      "summary" : "Transfers a voicemail message.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/{interactionId}",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getSocialItem",
      "type" : "SocialItem",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      } ],
      "summary" : "Returns an individual interaction.",
      "notes" : "\n         This method does not return call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/{interactionId}/accept",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "acceptInteraction",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "AcceptBody",
        "paramType" : "body",
        "name" : "acceptBody",
        "required" : true
      } ],
      "summary" : "Accepts assignment of the interaction to the agent with id {agentId} for the agent to interact with customer.",
      "notes" : "\n        This method is not used when accepting call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/{interactionId}/attributes",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "saveAttribute",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "AssignAttributeBody",
        "paramType" : "body",
        "name" : "attributeBody",
        "required" : true
      } ],
      "summary" : "Saves variables related to an interaction.",
      "notes" : "\n        This method is not used when accepting call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/{interactionId}/cluster",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "setCluster",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "ClusterBody",
        "paramType" : "body",
        "name" : "clusterBody",
        "required" : true
      } ],
      "summary" : "Updates the cluster of an interaction.",
      "notes" : "\n        This method is not used when accepting call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/{interactionId}/disposition",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "setDisposition",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "DispositionBody",
        "paramType" : "body",
        "name" : "dispositionBody",
        "required" : true
      } ],
      "summary" : "Updates the disposition of an interaction.",
      "notes" : "\n        This method is not used when accepting call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/{interactionId}/note",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "saveNote",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "NoteBody",
        "paramType" : "body",
        "name" : "noteBody",
        "required" : true
      } ],
      "summary" : "Creates a note related to this interaction.",
      "notes" : "\n        This method is not used when accepting call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/{interactionId}/reject",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "rejectInteraction",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      } ],
      "summary" : "Declines the assignment of an interaction to the agent with id {agentId} for the agent to interact with customer.",
      "notes" : "\n        This method is not used when accepting call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/{interactionId}/sentiment",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "setSentiment",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "SentimentBody",
        "paramType" : "body",
        "name" : "sentimentBody",
        "required" : true
      } ],
      "summary" : "Updates the sentiment of an interaction.",
      "notes" : "\n        This method is not used when accepting call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/{interactionId}/spam",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "setSpam",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "SpamBody",
        "paramType" : "body",
        "name" : "spamBody",
        "required" : true
      } ],
      "summary" : "Updates spam score of an interaction.",
      "notes" : " The social item's author (contact) has their average spam score updated accordingly.\n        This method is not used when accepting call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/{interactionId}/topic",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "assignTopic",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "AssignTopicBody",
        "paramType" : "body",
        "name" : "assignTopicBody",
        "required" : true
      } ],
      "summary" : "Assigns a topic to an interaction.",
      "notes" : "\n        This method is not used when accepting call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "POST",
      "nickname" : "createAndAssignTopic",
      "type" : "TopicIdBody",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "CreateTopicBody",
        "paramType" : "body",
        "name" : "createTopicBody",
        "required" : true
      } ],
      "summary" : "Creates a topic and assigns it to an interaction.",
      "notes" : "\n        This method is not used when accepting call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/{interactionId}/topic/{topicId}",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "editAssignedTopic",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "topicId",
        "required" : true
      }, {
        "type" : "CreateTopicBody",
        "paramType" : "body",
        "name" : "createTopicBody",
        "required" : true
      } ],
      "summary" : "Edits the topic assigned to an interaction.",
      "notes" : "\n        This method is not used when accepting call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/{interactionId}/transfer_to_agent",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "transferToAgent",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "TransferToAgentBody",
        "paramType" : "body",
        "name" : "transferBody",
        "required" : true
      } ],
      "summary" : "Transfers the assignment of an interaction to a specific agent.",
      "notes" : "\n        This method is not used when accepting call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/interactions/{interactionId}/transfer_to_group",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "transferToGroup",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "interactionId",
        "required" : true
      }, {
        "type" : "TransferToGroupBody",
        "paramType" : "body",
        "name" : "transferBody",
        "required" : true
      } ],
      "summary" : "Transfers the assignment of an interaction to a skill group of agents.",
      "notes" : "\n        This method is not used when accepting call nor voicemail interactions.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/locale",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "setUserLocale",
      "type" : "NonEmptyStringValue",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent ID",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "NonEmptyStringValue",
        "description" : "locale ID",
        "paramType" : "body",
        "name" : "localeId",
        "required" : true
      } ],
      "summary" : "Sets user locale.",
      "notes" : " Locale id is get from {@link IOrganizationService#getLocales(String)}.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "GET",
      "nickname" : "getUserLocale",
      "type" : "NonEmptyStringValue",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent ID",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns current user locale.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/log_issue",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "logIssue",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "NonEmptyStringValue",
        "description" : "Description of the issue: {@link NonEmptyStringValue}.",
        "paramType" : "body",
        "name" : "description",
        "required" : true
      } ],
      "summary" : "Logs an issue.<br>\n\n        When an agent faces an issue with Five9 product, they can log the issue into database.",
      "notes" : " This might help Five9\n        Support investigate the issue. The agent can type a brief description of the issue. This text might serve as an\n        identifier of the issue when talking to Support. Besides the description, the method automatically logs other\n        informations, such as the current time, the current user ID, the current call ID, etc.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/login_state",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getLoginState",
      "type" : "LoginState",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns agent login state.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/maintenance_notices",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getMaintenanceNotices",
      "type" : "array",
      "items" : {
        "$ref" : "MaintenanceNoticeInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Gets maintenance notices",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/maintenance_notices/{noticeId}",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getMaintenanceNotice",
      "type" : "MaintenanceNoticeInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "maintenance notice id",
        "paramType" : "path",
        "name" : "noticeId",
        "required" : true
      } ],
      "summary" : "Gets maintenance notice with specified id",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/maintenance_notices/{noticeId}/accept",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "acceptMaintenanceNotice",
      "type" : "MaintenanceNoticeInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "agent id",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "maintenance notice id",
        "paramType" : "path",
        "name" : "noticeId",
        "required" : true
      } ],
      "summary" : "Accepts maintenance notice with specified id",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/messages",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getMessages",
      "type" : "array",
      "items" : {
        "$ref" : "ExchangeMessage"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "integer",
        "format" : "int64",
        "description" : "Selected days for the search.",
        "paramType" : "query",
        "name" : "days"
      } ],
      "summary" : "Returns a list of messages.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "POST",
      "nickname" : "sendMessage",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "ExchangeMessageBody",
        "description" : "?? : {@link ExchangeMessageBody}.\n        [cd question: what type of message? to whom? what is ExchangeMessageBody?]",
        "paramType" : "body",
        "name" : "body",
        "required" : true
      } ],
      "summary" : "Sends a message.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/messages/{messageId}",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "sendMessageWithId",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "paramType" : "path",
        "name" : "messageId",
        "required" : true
      }, {
        "type" : "ExchangeMessageBody",
        "paramType" : "body",
        "name" : "body",
        "required" : true
      } ],
      "summary" : "Duplicate method for internal messaging.",
      "notes" : " Same as sendMessage().",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/options",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getOptions",
      "type" : "AgentOptionsInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns the list of options selected by the agent.",
      "notes" : "\n\n        This list is a subset of all options available to the agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "PUT",
      "nickname" : "setOptions",
      "type" : "AgentOptionsInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "AgentOptionsInfo",
        "description" : "List of agent options: {@link AgentOptionsInfo}.",
        "paramType" : "body",
        "name" : "options",
        "required" : true
      } ],
      "summary" : "Updates the list of options available to the agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/password",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "changePassword",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "ChangePasswordInfo",
        "description" : "The old password and the new one. For more information, see {@link ChangePasswordInfo}.\n                                        The agent creates a new password according to the domain requirements listed in\n                                        {@link IOrganizationService#getPasswordPolicies(String)}.",
        "paramType" : "body",
        "name" : "passwords",
        "required" : true
      } ],
      "summary" : "Changes a password.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/pending_connectors",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getPendingConnectors",
      "type" : "array",
      "items" : {
        "$ref" : "PendingConnectorInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns the current list of pending connectors.",
      "notes" : "\n\n        Every pending connector in the list contains all data sufficient to execute the original connector, manual or\n        automatic, on the client side. When a pending connector is added to or removed from the list,\n        the client is notified. This can be the result of the client calling <tt>processXxxxManualConnector()</tt>\n        or the server automatically launching a non-manual connector, such as \"On Call Disposition\".\n        <p>\n        Pending connectors should be executed by the client as soon as possible. When executed, pass an HTTP response code by\n        calling {@link #finalizePendingConnector(String, String, ConnectorResponseInfo)}.\n        <p>\n        To obtain a single pending connector, use {@link getPendingConnector(String)} instead.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/pending_connectors/{pendingConnectorId}",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getPendingConnector",
      "type" : "PendingConnectorInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the pending connector.",
        "paramType" : "path",
        "name" : "pendingConnectorId",
        "required" : true
      } ],
      "summary" : "Returns a pending connector.",
      "notes" : "\n\n        To obtain a list of pending connectors, use {@link getPendingConnectors(String)} instead.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/pending_connectors/{pendingConnectorId}/finalize",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "finalizePendingConnector",
      "type" : "PendingConnectorInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the pending connector.",
        "paramType" : "path",
        "name" : "pendingConnectorId",
        "required" : true
      }, {
        "type" : "ConnectorResponseInfo",
        "description" : "HTTP response code received in reply to connector execution: {@link com.five9.svc.agent.info.ConnectorResponseInfo}.",
        "paramType" : "body",
        "name" : "connectorResponse",
        "required" : true
      } ],
      "summary" : "Marks processed a pending connector.",
      "notes" : "\n        <p>\n        Besides marking the connector, this method stores the HTTP response code received by the client when executing\n        the connector. The connector is then removed from the list of pending connectors, and a notification is sent.\n\n        The HTTP response code is used for reporting purposes.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/permissions",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getPermissions",
      "type" : "array",
      "items" : {
        "$ref" : "PermissionEnum"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns the list of permissions assigned to the agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/personal_greeting",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "uploadGreeting",
      "type" : "PersonalGreetingInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "Attachment",
        "description" : "Greeting file to upload: {@link Attachment}.",
        "paramType" : "body",
        "name" : "file",
        "required" : true
      } ],
      "summary" : "Uploads a personal greeting file.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "multipart/form-data" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "GET",
      "nickname" : "getAgentGreetingInfo",
      "type" : "PersonalGreetingInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns information about a personal greeting.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "DELETE",
      "nickname" : "resetGreeting",
      "type" : "PersonalGreetingInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Resets a personal greeting.<br/>\n        If a greeting file has been uploaded, it is deleted.",
      "notes" : " Otherwise nothing happens.</br>",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/ping",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "ping",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Pings the server to let it know that the agent is still active.",
      "notes" : "\n\n        Use this method when no requests are made to prevent the server from ending the session.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/presence",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getPresence",
      "type" : "FullStateInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns the state of the agent.",
      "notes" : "\n        [cd question: does this apply also to text channels?]\n\n        This method applies to logged-in agents for voice channels: calls and voicemail.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "PUT",
      "nickname" : "setPresence",
      "type" : "FullStateInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "PresenceInfo",
        "description" : "Updated state of the agent: {@link FullStateInfo}.",
        "paramType" : "body",
        "name" : "stateInfo",
        "required" : true
      } ],
      "summary" : "Updates the state of the agent.",
      "notes" : "\n        The current state will be updated immediately if the agent is not on a call.\n        Otherwise the update will be applied at the end of the call.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/previews",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getPreviews",
      "type" : "array",
      "items" : {
        "$ref" : "PreviewInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns a list of preview sessions to be processed by the agent.",
      "notes" : "\n        <p>\n        Note that the list of preview sessions can contain no more than one item.\n        For information about a single preview, use {@link #getPreview}.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/previews/{previewId}",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getPreview",
      "type" : "PreviewInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the preview session.",
        "paramType" : "path",
        "name" : "previewId",
        "required" : true
      } ],
      "summary" : "Returns information about a single preview session.",
      "notes" : "\n\n        For the list of current preview sessions, use {@link getPreviews(String)}.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/previews/{previewId}/dispose",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "skipPreview",
      "type" : "PreviewInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the preview session.",
        "paramType" : "path",
        "name" : "previewId",
        "required" : true
      }, {
        "type" : "DisposeOptionsInfo",
        "description" : "Disposition options for the preview session: {@link DisposeOptionsInfo}.",
        "paramType" : "body",
        "name" : "disposeOptionsInfo",
        "required" : true
      } ],
      "summary" : "Skips a preview session.<br/>\n\n        When skipping a preview session, the agent must assign a disposition.<br/>\n        This method is similar to setCallDisposition(String, String, DisposeOptionsInfo).<br/>",
      "notes" : "Skips a preview session.<br/>\n\n        When skipping a preview session, the agent must assign a disposition.<br/>\n        This method is similar to {@link setCallDisposition(String, String, DisposeOptionsInfo)}.<br/>",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/previews/{previewId}/end",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "endPreview",
      "type" : "PreviewInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the preview session.",
        "paramType" : "path",
        "name" : "previewId",
        "required" : true
      } ],
      "summary" : "Ends a preview session.<br/>\n        Use this method when the preview is in the PreviewState#RENEWING RENEWING state, and the agent declines\n        to continue dialing the contact.<br/>\n        Besides, the method finalizes the live call associated with the preview.<br/>",
      "notes" : "Ends a preview session.<br/>\n        Use this method when the preview is in the {@link PreviewState#RENEWING RENEWING} state, and the agent declines\n        to continue dialing the contact.<br/>\n        Besides, the method finalizes the live call associated with the preview.<br/>",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/previews/{previewId}/make_call",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "makePreviewCall",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the preview session.",
        "paramType" : "path",
        "name" : "previewId",
        "required" : true
      }, {
        "type" : "StringValue",
        "description" : "ID of one of the contact number fields currently allowed to call: {@link StringValue}.\n                                        If contactFieldId refers to any other field, an exception is thrown.\n                                                For allowed field IDs, see {@link PreviewInfo#restrictions}.",
        "paramType" : "body",
        "name" : "contactFieldId",
        "required" : true
      } ],
      "summary" : "Makes a live call for a preview session.<br/>\n\n        Result is sent in notification AgentEvents#EVENT_CALL_CREATED.<br/>",
      "notes" : "Makes a live call for a preview session.<br/>\n\n        Result is sent in notification {@link AgentEvents#EVENT_CALL_CREATED}.<br/>",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/previews/{previewId}/manual_connectors",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getPreviewManualConnectors",
      "type" : "array",
      "items" : {
        "$ref" : "ManualConnectorInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the preview session.",
        "paramType" : "path",
        "name" : "previewId",
        "required" : true
      } ],
      "summary" : "Returns a list of manual connectors for a preview session.",
      "notes" : " The method returns the newly created pending\n        connector and sends a notification about its creation as well.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/previews/{previewId}/manual_connectors/{connectorId}/execute",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "processPreviewManualConnector",
      "type" : "PendingConnectorInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the preview session.",
        "paramType" : "path",
        "name" : "previewId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the manual connector.",
        "paramType" : "path",
        "name" : "connectorId",
        "required" : true
      } ],
      "summary" : "Creates a pending connector for the given manual connector.",
      "notes" : "\n\n        Use this method when an agent wants to launch a connector during a preview session.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/previews/{previewId}/renew",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "renewPreview",
      "type" : "PreviewInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the preview session.",
        "paramType" : "path",
        "name" : "previewId",
        "required" : true
      } ],
      "summary" : "Renews the preview session.<br/>\n        Renewing a preview enables the agent to call another contact number.",
      "notes" : " Use this method when the preview is in\n        the {@link PreviewState#RENEWING RENEWING} state, and the agent agrees to continue dialing a contact.\n        If the agent declines to continue dialing, use {@link endPreview(String, String)} instead.<br/>\n        Besides, the method finalizes the live call associated with the preview.<br/>",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/prompts",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getActiveSkillsPrompts",
      "type" : "array",
      "items" : {
        "$ref" : "AudioFileInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns active skills prompts information.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/prompts/{promptId}/stream",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getSkillPromptStreamResponse",
      "type" : "Response",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the skill prompt",
        "paramType" : "path",
        "name" : "promptId",
        "required" : true
      } ],
      "summary" : "Returns a data (audio) stream for a skill prompt.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/octet-stream" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/queue_callbacks",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getQueueCallbacks",
      "type" : "array",
      "items" : {
        "$ref" : "QueueCallbackInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns a list of queue callbacks to be processed by the agent.",
      "notes" : "\n\n        Note that the list of queue callbacks can contain no more than one item.\n        For information about a single queue callback, use {@link getQueueCallback(String, String)}.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/queue_callbacks/{queueCallbackId}",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getQueueCallback",
      "type" : "QueueCallbackInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the queue callback.",
        "paramType" : "path",
        "name" : "queueCallbackId",
        "required" : true
      } ],
      "summary" : "Returns information about a queue callback.",
      "notes" : "\n\n        For the list of current queue callbacks, use {@link getQueueCallbacks(String)}.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/queue_callbacks/{queueCallbackId}/answer",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "answerQueueCallback",
      "type" : "QueueCallbackInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the queue callback.",
        "paramType" : "path",
        "name" : "queueCallbackId",
        "required" : true
      } ],
      "summary" : "Answers a queue callback.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/queue_callbacks/{queueCallbackId}/reject",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "rejectQueueCallback",
      "type" : "QueueCallbackInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the queue callback.",
        "paramType" : "path",
        "name" : "queueCallbackId",
        "required" : true
      } ],
      "summary" : "Rejects a queue callback.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/session_expiration",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getSessionExpirationInfo",
      "type" : "SessionExpirationInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns the expiration settings for the session.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/session_restart",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "sessionRestart",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Recreates the agent session after a switch over.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/session_start",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "createSession",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "StationInfo",
        "description" : "Station information: {@link StationInfo}.",
        "paramType" : "body",
        "name" : "stationInfo",
        "required" : true
      }, {
        "type" : "boolean",
        "description" : "Normally the client should set this parameter to <code>false</code>. For more\n                                                        details, see the Throws section.",
        "paramType" : "query",
        "name" : "force"
      }, {
        "type" : "string",
        "description" : "[Optional] For internal use only.",
        "paramType" : "query",
        "name" : "appType"
      } ],
      "summary" : "Creates an agent session and registers the station for the specified agent.",
      "notes" : "\n        This method is to be called in order to let the user work as an agent.\n        If succeeds, the method changes the login state (see {@link #getLoginState}) and sends an event with\n        {@link EventContext#eventId} = {@link AgentEvents#EVENT_LOGIN_STATE_UPDATED}.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/session_stop",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "sessionStop",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "ReasonCodeInfo",
        "description" : "Logout reason code: {@link ReasonCodeInfo}.",
        "paramType" : "body",
        "name" : "reasonCodeInfo",
        "required" : true
      }, {
        "type" : "boolean",
        "description" : "false serves when the agent disconnects manually.<br>\n                          true serves when the client is going to automatically disconnect the agent due to\n                          inactivity (see {@link #getSessionExpirationInfo}). In this case, most of usual logout\n                          restrictions (see {@link #canLogout}) are skipped. However if the agent is assumed as\n                          talking by phone, disconnection is prevented anyway by throwing an exception with id =\n                          {@link ExceptionCodes#CANNOT_FORCE_LOGOUT_WHEN_TALKING CANNOT_FORCE_LOGOUT_WHEN_TALKING}\n                          (code 8). The reason is that an agent on the phone should not be treated as inactive\n                          even though they have not been pressing a button on UI for a long time. The agent is\n                          assumed as on the phone when there is an active call in {@link CallState#TALKING} state,\n                          or a consultant call during warm transfer (i.e. {@link CallInfo#hasIncompleteTransfer}\n                          = true), or so on. The client does not necessarily need to check these conditions prior\n                          to calling the method. Instead, we recommend just to call it. If the above-mentioned\n                          exception is thrown, restart the inactivity timer. Note that the agent cannot hang on\n                          the phone call forever. VCC drops every call longer than 8 hours automatically.",
        "paramType" : "query",
        "name" : "force"
      } ],
      "summary" : "Disconnects the agent from the VCC server.",
      "notes" : "\n\n        An exception is thrown if the agent is currently not allowed to disconnect (see {@link #canLogout}).",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/sessions/{sessionId}",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getInteractionSession",
      "type" : "InteractionSessionInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Session ID.",
        "paramType" : "path",
        "name" : "sessionId",
        "required" : true
      } ],
      "summary" : "Returns an interaction session.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/sessions/{sessionId}/worksheet",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getSessionWorksheet",
      "type" : "SessionWorksheetInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "Session ID.",
        "paramType" : "path",
        "name" : "sessionId",
        "required" : true
      } ],
      "summary" : "Returns the worksheet answers filled during an interaction session.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/settings",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "setSettings",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "SetSettingsBody",
        "description" : "Detailed agent settings: {@link SetSettingsBody}.\n        [cd question: what does Body mean?]",
        "paramType" : "body",
        "name" : "setSettingsBody",
        "required" : true
      } ],
      "summary" : "Sets or updates settings.",
      "notes" : "\n        [cd question: can this method do either: set (first time) and update (subsequent times).]",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "GET",
      "nickname" : "getSettings",
      "type" : "AgentOptionsInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns information about the options available to the agent.",
      "notes" : "\n\n        Temporary copy of VCC options for SCC.\n        [cd question: what kind of options or settings are these?]",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/skills",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getSkills",
      "type" : "array",
      "items" : {
        "$ref" : "AgentSkillInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns the list of skill groups assigned to the agent.",
      "notes" : "\n\n        This method returns the list of all skill groups assigned to the agent. However, the agent may activate only a subset\n        of these skills for each session. To obtain the list of skill groups activated during a session,\n        see {@link getActiveSkills(String)}.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/softphone_config",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getSoftphoneRegistrationInfo",
      "type" : "SoftphoneRegistrationInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns information required to register the softphone.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/start_statsuses_flow",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "startStats",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Starts ???????\n        [cd question: what does it do?]",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/station",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getStation",
      "type" : "StationInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns information about the agent's station.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/station/restart",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "restartStation",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Restarts the agent's station.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/station_state",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getStationState",
      "type" : "StationState",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns the state of the station assigned to the agent.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/stop_statsuses_flow",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "stopStats",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Stops ???????\n        [cd question: what does it do?]",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/subscriptions",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getSubscriptions",
      "type" : "array",
      "items" : {
        "$ref" : "SubscriptionInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns information about all available subscriptions.",
      "notes" : "\n\n        The following subscriptions are supported now:\n        <ol>\n        <li> Agent Ready Presence subscription with {@link SubscriptionInfo#id} = 1.\n        <br>On presence change the agent\n        will receive event with id = 15 ({@link AgentEvents#EVENT_AGENTS_READY_PRESENCES_SUBSCRIPTION_UPADATE})\n        <li>Skill Statistics subscription with {@link SubscriptionInfo#id} = 10.\n        <br>The agent will receive skill statistics\n        with event with id = 29 ({@link AgentEvents#EVENT_SKILL_STATS_SNAPSHOT_SUBSCRIPTION_UPADATE})\n        </ol>",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/subscriptions/{subscriptionId}",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "subscribe",
      "type" : "SubscriptionInfo",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "ID of the subscription.",
        "paramType" : "path",
        "name" : "subscriptionId",
        "required" : true
      }, {
        "type" : "SubscriptionInfo",
        "paramType" : "body",
        "name" : "subscriptionInfo",
        "required" : true
      } ],
      "summary" : "Subscribes/Unsubscribes the agent.",
      "notes" : "\n        {@link com.five9.core.subscription.SubscriptionInfo#subscribed} should be set to true - to subscribe\n        and false - to unsubscribe.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/third_party_config",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "configureThirdParty",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "ThirdPartyConfig",
        "paramType" : "body",
        "name" : "rightNowBody",
        "required" : true
      } ],
      "summary" : "Allows configuration of 3rd party variables that can be applied to an agent's session.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/time_zone",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getTimeZone",
      "type" : "StringValue",
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      } ],
      "summary" : "Returns the agent's time zone.",
      "notes" : "\n\n        The time zone is returned in the format of the IANA Time Zone Database.\n        Alternatively 'Default' can be returned. This means that client's time zone must be used.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/agents/{agentId}/transferable_agents",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getTransferableAgents",
      "type" : "array",
      "items" : {
        "$ref" : "AgentInfo"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "Agent ID.",
        "paramType" : "path",
        "name" : "agentId",
        "required" : true
      }, {
        "type" : "integer",
        "format" : "int32",
        "description" : "Starting index to select. 0 (zero) means the very first item.",
        "paramType" : "query",
        "name" : "from"
      }, {
        "type" : "integer",
        "format" : "int32",
        "description" : "Maximum number to return. To return all available agents, use 0 (zero).",
        "paramType" : "query",
        "name" : "limit"
      } ],
      "summary" : "Returns a list of agents that could receive a call transfer.",
      "notes" : "\n        <p>\n        The agent uses this list to select another agent when transferring a call. Only agents having permission to\n        receive transfers are included into the list.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  } ],
  "models" : {
    "ConferenceExternalParticipantInfo" : {
      "id" : "ConferenceExternalParticipantInfo",
      "properties" : {
        "warm" : {
          "type" : "boolean"
        },
        "includeCallerInfo" : {
          "type" : "boolean",
          "description" : "If you set this option to true, the new call participant receives contact details.\n If you set this option to false or omit, the call participant receives only information\n about you that initiated the call.\n The option should be set to true or omitted if {@link CampaignInfo#flags}\n contains {@link CampaignFlag#PASS_CONTACTS_ANI_FOR_3RD_PARTY_CONFERENCES}."
        },
        "isWarm" : {
          "type" : "boolean",
          "description" : "Defines if the first conference participant should be added in a warm mode.\n Must be false for the second and next conference participants."
        },
        "contactId" : {
          "type" : "string",
          "description" : "See {@link ExternalCallDestinationInfo#contactId} for description."
        },
        "checkDNC" : {
          "type" : "boolean",
          "description" : "See {@link ExternalCallDestinationInfo#checkDNC} for description."
        },
        "number" : {
          "type" : "string",
          "description" : "A phone number."
        }
      }
    },
    "Attachment" : {
      "id" : "Attachment",
      "properties" : {
        "headers" : {
          "type" : "MultivaluedMap"
        },
        "providers" : {
          "type" : "Providers"
        },
        "dataHandler" : {
          "type" : "DataHandler"
        },
        "contentType" : {
          "type" : "MediaType"
        },
        "object" : {
          "type" : "Object"
        },
        "contentDisposition" : {
          "type" : "ContentDisposition"
        },
        "contentId" : {
          "type" : "string"
        },
        "handler" : {
          "type" : "DataHandler"
        }
      }
    },
    "SocialItemReply" : {
      "id" : "SocialItemReply",
      "properties" : {
        "tenantId" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "parentId" : {
          "type" : "string"
        },
        "lname" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "replyText" : {
          "type" : "string"
        },
        "profileId" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        },
        "replyTime" : {
          "type" : "string"
        },
        "fname" : {
          "type" : "string"
        }
      }
    },
    "CallInfo" : {
      "id" : "CallInfo",
      "properties" : {
        "isTransfer" : {
          "type" : "boolean",
          "description" : "Indicates if call is part of transfer activity."
        },
        "afterCallWorkTimeout" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "After call work timeout. (milliseconds) Not NULL when call is for campaign configured to use it."
        },
        "campaignId" : {
          "type" : "string",
          "description" : "Campaign Id to which call belongs. This field's value can be used to get campaign specific dispositions for a\n call. It can be null if call is not assigned to any campaign"
        },
        "recording" : {
          "type" : "boolean",
          "description" : "Indicates if the call is being recorded.\n More exactly, this is what UI should show to the agent about call recording.\n Actually the fact of automatic call recording can be intentionally hidden from the agent.\n In this case, the value of this field is unrelated to real recording."
        },
        "activeContact" : {
          "type" : "ContactInfo",
          "description" : "Currently active contact"
        },
        "dispositionId" : {
          "type" : "string",
          "description" : "Call disposition. Not NULL when call has been dispositioned."
        },
        "startTimestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time when VCC started processing the call. (Epoch time in milliseconds)"
        },
        "customer" : {
          "type" : "string",
          "description" : "Customer title. Not NULL only when state == QUEUED (queued call)"
        },
        "remoteNumber" : {
          "type" : "string",
          "description" : "Call remote number."
        },
        "handleTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Total time in milliseconds the call was being handled."
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Priority of the call. Not NULL only when state == QUEUED (queued call)"
        },
        "hasIncompleteTransfer" : {
          "type" : "boolean",
          "description" : "Indicates that warm transfer is in progress."
        },
        "conferenceDispositioning" : {
          "type" : "string",
          "description" : "Conference dispositioning mode.",
          "enum" : [ "INITIATOR_DISPOSITION", "LAST_AGENT_DISPOSITION", "INITIATOR_DECIDES_WHO_DISPOSITION" ]
        },
        "isInternalReceiver" : {
          "type" : "boolean",
          "description" : "Indicates if the agent is the receiving part of an internal call."
        },
        "autoRecording" : {
          "type" : "boolean",
          "description" : "True if auto recording is configured for the call and this is displayed to the agent. False if either the call is\n not auto recorded or auto recorded secretly. The agent might stop auto recording, but the field never changes the\n value during a call. The case when the client needs this value is very rare. Let the agent is on call and the\n call is being recorded. What if an administrator happens to revoke permission to record calls from the agent at\n this moment? We recommend the following behavior to the client:\n <ul>\n <li>If this is manual recording, let the agent stop it if they want.</li>\n <li>If this is auto recording, do not let the agent stop it.</li>\n </ul>"
        },
        "handleTimestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time when an agent started handling the call. (Epoch time in milliseconds)"
        },
        "ivrTransferModule" : {
          "type" : "string",
          "description" : "Name of IVR module that transferred the call to the agent."
        },
        "dnis" : {
          "type" : "string",
          "description" : "Call DNIS."
        },
        "transfer" : {
          "type" : "boolean"
        },
        "recordingAllowed" : {
          "type" : "boolean",
          "description" : "Indicates if the call recording is allowed. UI should not try to toggle recording till it receives websocket\n notification that the call is updated with {@link EventContext#eventReason} =\n {@link CallNotifyReason#RECORDING_ALLOWED RECORDING_ALLOWED}.\n Note that even if the field is true, recording still can be forbidden for other reasons. For example, the agent\n might not have the permission, {@link PermissionEnum#CAN_MAKE_RECORDINGS CAN_MAKE_RECORDINGS}."
        },
        "ani" : {
          "type" : "string",
          "description" : "Call ANI."
        },
        "worksheet" : {
          "type" : "WorksheetInfo",
          "description" : "Worksheet answers"
        },
        "addressType" : {
          "type" : "string",
          "description" : "Type of call address. Actual for conference call.",
          "enum" : [ "EXTERNAL", "AGENT", "SKILL", "CAMPAIGN", "VOICEMAIL" ]
        },
        "variables" : {
          "type" : "SecureMap",
          "description" : "Call variables."
        },
        "autoAnswer" : {
          "type" : "boolean"
        },
        "parkTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Total time in milliseconds for which the call was in PARKED state."
        },
        "canRecycle" : {
          "type" : "boolean",
          "description" : "Indicates that call can be recycled what means the recycle disposition can be used to dispose this call."
        },
        "contactLookupResult" : {
          "type" : "ContactLookupResultInfo",
          "description" : "Contact lookup information for the call.\n <p>\n This field can help the agent determine the right {@link #activeContact call contact} when it is not exactly known. A\n contact can be unknown in case of an inbound call or a manual external call. At the same time, the phone number\n of the remote party is usually known. VCC tries to match the number with an existent contact in the database. The\n result of this lookup is placed into the given field. There can be one contact, or multiple contacts, or no\n contacts at all. {@link #activeContact} is automatically initialized with data of the first contact found (if any).\n However the agent may choose another contact to associate with the call (see\n {@link IAgentService#setCallActiveContact}). They can look at the contacts from the given field as the most\n probable alternatives. At the same time, the agent may select any other contact or create a new one."
        },
        "comment" : {
          "type" : "string",
          "description" : "Call comment"
        },
        "stateDuration" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Duration in milliseconds for which the call is in current state."
        },
        "callType" : {
          "type" : "string",
          "description" : "Call type",
          "enum" : [ "OUTBOUND", "INBOUND", "TEST", "AGENT", "AUTODIAL", "INTERNAL", "QUEUE_CALLBACK", "VISUAL", "INBOUND_VOICEMAIL", "OUTBOUND_VOICEMAIL", "INTERNAL_VOICEMAIL", "AGENT_PREVIEW", "TEST_PREVIEW", "OUTBOUND_PREVIEW" ]
        },
        "isCallback" : {
          "type" : "boolean",
          "description" : "Indicates if the call is a callback"
        },
        "holdTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Total time in milliseconds for which the call was in ON_HOLD state."
        },
        "holdTimestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time when the call entered last ON_HOLD state. (Epoch time in milliseconds)"
        },
        "createTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time of creating queued call on VCC side. (Epoch time in milliseconds)"
        },
        "stateSince" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time when call entered current state. (Epoch time in milliseconds)"
        },
        "transferPauseTimeout" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Timeout for transfer (inbound) pause.\n When agent gets a call it may be in state ON_HOLD.\n If transferPauseTimeout > 0 and state == ON_HOLD transfer pause has been applied.\n To calculate left on hold time stateSince and stateDuration may be used."
        },
        "averageHandleTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Average Handle Time for this type of call. (milliseconds or 0 if not available, e.g. internal calls)"
        },
        "state" : {
          "type" : "string",
          "description" : "Current call state.",
          "enum" : [ "QUEUED", "RINGING_ON_OUR_SIDE", "OFFERED", "RINGING_ON_OTHER_SIDE", "TALKING", "ON_HOLD", "WRAP_UP", "PARKED", "CONFERENCE_PARTICIPANT_RINGING", "CONFERENCE_PARTICIPANT_CONSULTING", "CONFERENCE_PARTICIPANT_TALKING", "FINISHED" ]
        },
        "id" : {
          "type" : "string",
          "description" : "Call id"
        },
        "previewId" : {
          "type" : "string",
          "description" : "If this is a live call created from preview the field will contain corresponding preview Id. Else null"
        },
        "wrapupTimestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time the call entered WRAP_UP state. (Epoch time in milliseconds)"
        },
        "callbackId" : {
          "type" : "string",
          "description" : "Id of the callback"
        },
        "userTransferringId" : {
          "type" : "string",
          "description" : "If not null, contains Id of the agent who transferred the call."
        },
        "parkTimestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time when the call entered last PARKED state. (Epoch time in milliseconds)"
        },
        "billingTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Total time in milliseconds for which the call is billed."
        },
        "talkTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Total time in milliseconds for which the call was in TALKING state."
        },
        "billingTimestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time when billing was started. (Epoch time in milliseconds)"
        },
        "wrapupTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Total time in milliseconds for which the call is/was in WRAP_UP state."
        },
        "duration" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Total duration of the call in milliseconds."
        },
        "acceptTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time when call was accepted by agent. (Epoch time in milliseconds, 0 until accepted by agent)"
        },
        "queueType" : {
          "type" : "string",
          "description" : "Queue type",
          "enum" : [ "PERSONAL", "SKILL" ]
        },
        "talkTimestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time when the call entered last TALKING state. (Epoch time in milliseconds)"
        },
        "callback" : {
          "type" : "boolean"
        },
        "isAutoAnswer" : {
          "type" : "boolean",
          "description" : "Indicates if the call is going to be auto-answered. It makes sense only when {@link #state}=\n {@link CallState#OFFERED}. If the field is false, the call can be manually answered or rejected by\n {@link IAgentService#answerCall()} or {@link IAgentService#rejectCall()} respectively."
        },
        "internalReceiver" : {
          "type" : "boolean"
        }
      }
    },
    "EchoCallInfo" : {
      "id" : "EchoCallInfo",
      "properties" : {
        "echoCall" : {
          "type" : "boolean"
        },
        "reason" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PendingConnectorInfo" : {
      "id" : "PendingConnectorInfo",
      "properties" : {
        "connectorId" : {
          "type" : "string",
          "description" : "ID of the connector this info is created for. Normally the client doesn't need to address this field. It is\n provided for specific purposes such as logging or debugging."
        },
        "id" : {
          "type" : "string",
          "description" : "ID of the pending connector info. Unique for each execution of a connector."
        },
        "httpMethod" : {
          "type" : "string",
          "description" : "HTTP method used to execute HTTP request.",
          "enum" : [ "GET", "POST" ]
        },
        "ctiDisplayMode" : {
          "type" : "string",
          "description" : "<i>This option should be used by CTI Web UI.</i> Display mode denotes if/how the results of connector execution\n should be presented to an agent, for example, HTTP request can be executed silently or in a new browser tab.",
          "enum" : [ "DO_NOT_DISPLAY", "CURRENT_WINDOW", "NEW_WINDOW" ]
        },
        "displayMode" : {
          "type" : "string",
          "description" : "<i>This option should be used by regular Web UI Agent.</i> Display mode denotes if/how the results of connector\n execution should be presented to an agent, for example, HTTP request can be executed silently or in a new browser\n tab.",
          "enum" : [ "DO_NOT_DISPLAY", "CURRENT_WINDOW", "NEW_WINDOW" ]
        },
        "payload" : {
          "type" : "string",
          "description" : "HTTP request payload of type \"application/x-www-form-urlencoded\". Should be used only when {@link #httpMethod} is\n {@link ConnectorHttpMethod#POST POST}"
        },
        "url" : {
          "type" : "string",
          "description" : "URL to execute HTTP request with."
        }
      }
    },
    "NonNullLongValue" : {
      "id" : "NonNullLongValue",
      "properties" : {
        "value" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "EmailAttachmentInfo" : {
      "id" : "EmailAttachmentInfo",
      "properties" : {
        "fileName" : {
          "type" : "string"
        }
      }
    },
    "BooleanValue" : {
      "id" : "BooleanValue",
      "properties" : {
        "value" : {
          "type" : "boolean"
        }
      }
    },
    "Long[]" : {
      "id" : "Long[]",
      "properties" : {
        "value" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ContactLookupResultInfo" : {
      "id" : "ContactLookupResultInfo",
      "properties" : {
        "hasMore" : {
          "type" : "boolean",
          "description" : "Indicates whether there are more entries on the server which can requested additionally"
        },
        "cursor" : {
          "type" : "string",
          "description" : "Serialized object. Don't modify or show it somewhere. \n Use it in next request to get next records for the contact"
        },
        "hasMoreRecords" : {
          "type" : "void"
        },
        "contacts" : {
          "type" : "array",
          "description" : "Collection of contacts",
          "items" : {
            "$ref" : "ContactInfo"
          }
        }
      }
    },
    "CampaignTransferDestinationInfo" : {
      "id" : "CampaignTransferDestinationInfo",
      "properties" : {
        "campaignId" : {
          "type" : "string",
          "description" : "Id of the destination campaign.\n This should be one of those returned by {@link IAgentService#getDestinationCampaigns}."
        },
        "warm" : {
          "type" : "boolean"
        },
        "isWarm" : {
          "type" : "boolean",
          "description" : "See {@link ExternalTransferDestinationInfo#isWarm}"
        }
      }
    },
    "InteractionInfo" : {
      "id" : "InteractionInfo",
      "properties" : {
        "channelType" : {
          "type" : "string",
          "description" : "Type of interaction.",
          "enum" : [ "CALL", "VOICE_MAIL", "EMAIL", "CHAT", "SOCIAL", "TEXT" ]
        },
        "interactionId" : {
          "type" : "string",
          "description" : "Identificator of interaction."
        }
      }
    },
    "ReplyToHistory" : {
      "id" : "ReplyToHistory",
      "properties" : {
        "profileId" : {
          "type" : "string"
        },
        "authorName" : {
          "type" : "string"
        },
        "replyMsg" : {
          "type" : "string"
        }
      }
    },
    "CreateTopicBody" : {
      "id" : "CreateTopicBody",
      "properties" : {
        "topicName" : {
          "type" : "string"
        }
      }
    },
    "AgentChatBody" : {
      "id" : "AgentChatBody",
      "properties" : {
        "content" : {
          "type" : "string"
        },
        "profileId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ownerId" : {
          "type" : "string"
        },
        "userIds" : {
          "type" : "String[]"
        },
        "contentType" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "messageId" : {
          "type" : "string"
        }
      }
    },
    "ExchangeMessageBody" : {
      "id" : "ExchangeMessageBody",
      "properties" : {
        "jsonString" : {
          "type" : "string"
        },
        "exchangeName" : {
          "type" : "string"
        }
      }
    },
    "SendSocialBody" : {
      "id" : "SendSocialBody",
      "properties" : {
        "profileId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "authorName" : {
          "type" : "string"
        },
        "authorHandle" : {
          "type" : "string"
        },
        "msgType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "replyMsg" : {
          "type" : "string"
        },
        "authorId" : {
          "type" : "string"
        }
      }
    },
    "AgentTransferDestinationInfo" : {
      "id" : "AgentTransferDestinationInfo",
      "properties" : {
        "recordVoicemail" : {
          "type" : "boolean",
          "description" : "Indicates whether a voicemail should be recorded if the destination is unavailable"
        },
        "warm" : {
          "type" : "boolean"
        },
        "isWarm" : {
          "type" : "boolean",
          "description" : "See {@link ExternalTransferDestinationInfo#isWarm}"
        },
        "agentId" : {
          "type" : "string",
          "description" : "Id of the destination agent.\n This should be one of those returned by {@link IAgentService#getTransferableAgents}."
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Transfer timeout in milliseconds.\n It limits how long the call can wait until answered on the destination side.\n If the timeout expires, the call is directed to a voicemail if {@link #recordVoicemail} = true.\n Otherwise the call is returned to the agent as a parked call.\n 0 indicates unlimited timeout."
        }
      }
    },
    "VoicemailLookupResultInfo" : {
      "id" : "VoicemailLookupResultInfo",
      "properties" : {
        "cursor" : {
          "type" : "string",
          "description" : "Current cursor to position in personal voicemail collection.\n Do not change this value, because it is machine readable only data."
        },
        "items" : {
          "type" : "array",
          "description" : "Collection of voicemail items as a result of lookup",
          "items" : {
            "$ref" : "VoicemailInfo"
          }
        }
      }
    },
    "AcceptBody" : {
      "id" : "AcceptBody",
      "properties" : {
        "profileId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "mediaType" : {
          "type" : "string"
        }
      }
    },
    "CallAudioFileInfo" : {
      "id" : "CallAudioFileInfo",
      "properties" : {
        "skillPrompts" : {
          "type" : "array",
          "description" : "List of available skill prompts",
          "items" : {
            "$ref" : "AudioFileInfo"
          }
        },
        "recordings" : {
          "type" : "array",
          "description" : "List of available IVR recordings",
          "items" : {
            "$ref" : "AudioFileInfo"
          }
        }
      }
    },
    "CampaignInfo" : {
      "id" : "CampaignInfo",
      "properties" : {
        "outEmail" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "the outEmail"
        },
        "id" : {
          "type" : "string",
          "description" : "Id of campaign"
        },
        "chatTerminateMessage" : {
          "type" : "string"
        },
        "flags" : {
          "type" : "array",
          "items" : {
            "$ref" : "CampaignFlag"
          },
          "uniqueItems" : true
        },
        "chatWelcomeMessage" : {
          "type" : "string"
        },
        "campaignType" : {
          "type" : "string",
          "description" : "Campaign type",
          "enum" : [ "INBOUND", "OUTBOUND", "AUTODIAL" ]
        },
        "customSource" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "description" : "Campaign name"
        },
        "state" : {
          "type" : "string",
          "description" : "Campaign current state",
          "enum" : [ "NOT_RUNNING", "RUNNING", "STOPPING", "STARTING", "RESETTING" ]
        },
        "customIcon" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "avatarURL" : {
          "type" : "string"
        },
        "assistances" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "AuthorAccount" : {
      "id" : "AuthorAccount",
      "properties" : {
        "updateTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "relation" : {
          "type" : "integer",
          "format" : "int32"
        },
        "handleId" : {
          "type" : "string"
        },
        "handleName" : {
          "type" : "string"
        },
        "profileURL" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "imageURL" : {
          "type" : "string"
        },
        "authorId" : {
          "type" : "string"
        }
      }
    },
    "SpeedDialTransferDestinationInfo" : {
      "id" : "SpeedDialTransferDestinationInfo",
      "properties" : {
        "dispositionTimeout" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "See {@link ExternalTransferDestinationInfo#getDispositionTimeout()}"
        },
        "warm" : {
          "type" : "boolean"
        },
        "isWarm" : {
          "type" : "boolean",
          "description" : "See {@link ExternalTransferDestinationInfo#isWarm}"
        },
        "dispositionId" : {
          "type" : "string",
          "description" : "See {@link ExternalTransferDestinationInfo#getDispositionId}"
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "See {@link ExternalTransferDestinationInfo#getTimeout}"
        },
        "destination" : {
          "type" : "SpeedDialCallDestinationInfo",
          "description" : "SpeedDial destination info"
        }
      }
    },
    "CallbackSnoozeInfo" : {
      "id" : "CallbackSnoozeInfo",
      "properties" : {
        "callbackId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Callback Id"
        },
        "tillTimeStamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Timestamp till callback is snoozed (in msecs)"
        }
      }
    },
    "SpamBody" : {
      "id" : "SpamBody",
      "properties" : {
        "spam" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CustomerPortalInfo" : {
      "id" : "CustomerPortalInfo",
      "properties" : {
        "token" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "TopicIdBody" : {
      "id" : "TopicIdBody",
      "properties" : {
        "topicId" : {
          "type" : "string"
        }
      }
    },
    "FieldViewInfo" : {
      "id" : "FieldViewInfo",
      "properties" : {
        "width" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Field width in percents. Values from 0 to 100 are allowed"
        },
        "relatedField" : {
          "type" : "RelatedFieldInfo",
          "description" : "Indicates source of data (call attached variable, contact field) to which field is attached"
        },
        "label" : {
          "type" : "string",
          "description" : "UI label for field"
        },
        "editable" : {
          "type" : "boolean",
          "description" : "Indicates whether field can be edited"
        }
      }
    },
    "MessageBodyItem[]" : {
      "id" : "MessageBodyItem[]",
      "properties" : {
        "analyze" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        }
      }
    },
    "SecureMap" : {
      "id" : "SecureMap",
      "properties" : {
        "empty" : {
          "type" : "boolean"
        },
        "loadFactor" : {
          "type" : "number",
          "format" : "float"
        },
        "threshold" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CallbackStatesInfo" : {
      "id" : "CallbackStatesInfo",
      "properties" : {
        "snoozed" : {
          "type" : "array",
          "description" : "Snoozed callbacks",
          "items" : {
            "$ref" : "CallbackSnoozeInfo"
          }
        },
        "dismissed" : {
          "type" : "array",
          "description" : "IDs of dismissed callbacks",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "VoicemailTransferDestinationInfo" : {
      "id" : "VoicemailTransferDestinationInfo",
      "properties" : {
        "agentId" : {
          "type" : "string",
          "description" : "Agent ID to transfer the voicemail to.\n Only one field must be filled, either {@link #agentId} or {@link #skillId}."
        },
        "skillId" : {
          "type" : "string",
          "description" : "Skill ID to transfer the voicemail to.\n Only one field must be filled, either {@link #agentId} or {@link #skillId}."
        }
      }
    },
    "PlayerStateInfo" : {
      "id" : "PlayerStateInfo",
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "Player status",
          "enum" : [ "NON_PLAYING", "PLAYING", "PAUSED" ]
        },
        "trackInfo" : {
          "type" : "PlayerTrackInfo",
          "description" : "Track info, null in case status equals {@link PlayerStatus#NON_PLAYING}"
        }
      }
    },
    "ChangePasswordInfo" : {
      "id" : "ChangePasswordInfo",
      "properties" : {
        "newPassword" : {
          "type" : "string",
          "description" : "New agent's password"
        },
        "oldPassword" : {
          "type" : "string",
          "description" : "Previous agent's password"
        }
      }
    },
    "RemoveChatUsersBody" : {
      "id" : "RemoveChatUsersBody",
      "properties" : {
        "content" : {
          "type" : "string"
        },
        "removeUserNames" : {
          "type" : "String[]"
        },
        "ownerId" : {
          "type" : "string"
        },
        "removeUserIds" : {
          "type" : "String[]"
        },
        "userIds" : {
          "type" : "String[]"
        },
        "contentType" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "messageId" : {
          "type" : "string"
        }
      }
    },
    "UserFilter" : {
      "id" : "UserFilter",
      "properties" : {
        "chatWelcomeMessage" : {
          "type" : "string"
        },
        "loginStatus" : {
          "type" : "string"
        },
        "dispositionId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fIFO" : {
          "type" : "boolean"
        },
        "timeZone" : {
          "type" : "string"
        },
        "dispositions" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          }
        },
        "refreshRate" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxChat" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "lockByUserId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isSentiment" : {
          "type" : "integer",
          "format" : "int32"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "profileId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "isFIFO" : {
          "type" : "boolean"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "autoLock" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortInfluence" : {
          "type" : "integer",
          "format" : "int32"
        },
        "emailACDType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxSocial" : {
          "type" : "string"
        },
        "sentiments" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          }
        },
        "chatTerminateMessage" : {
          "type" : "string"
        },
        "socialACDType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxEmail" : {
          "type" : "string"
        },
        "isSpam" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dateRangeStart" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currentStatusId" : {
          "type" : "string"
        },
        "priorities" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          }
        },
        "spams" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          }
        },
        "showProfiles" : {
          "type" : "string"
        },
        "chatACDType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dateRangeEnd" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clusters" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          }
        },
        "includeMine" : {
          "type" : "integer",
          "format" : "int32"
        },
        "profiles" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          }
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lockByDate" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "QueueCallbackInfo" : {
      "id" : "QueueCallbackInfo",
      "properties" : {
        "dnis" : {
          "type" : "string",
          "description" : "DNIS number"
        },
        "id" : {
          "type" : "string",
          "description" : "Queue Callback Identificator"
        },
        "campaignId" : {
          "type" : "string",
          "description" : "Campaign identificator associated to this preview."
        },
        "state" : {
          "type" : "string",
          "description" : "Queue callback state",
          "enum" : [ "DIALING", "ANSWERING", "REJECTED" ]
        },
        "callbackNumber" : {
          "type" : "string",
          "description" : "Callback number"
        },
        "contact" : {
          "type" : "ContactInfo",
          "description" : "Contact associated to this callback."
        },
        "remoteNumber" : {
          "type" : "string",
          "description" : "Remote number"
        },
        "variables" : {
          "type" : "Map",
          "description" : "Collection of callback attached variables"
        },
        "callType" : {
          "type" : "string",
          "description" : "Call type",
          "enum" : [ "OUTBOUND", "INBOUND", "TEST", "AGENT", "AUTODIAL", "INTERNAL", "QUEUE_CALLBACK", "VISUAL", "INBOUND_VOICEMAIL", "OUTBOUND_VOICEMAIL", "INTERNAL_VOICEMAIL", "AGENT_PREVIEW", "TEST_PREVIEW", "OUTBOUND_PREVIEW" ]
        }
      }
    },
    "AddChatUsersBody" : {
      "id" : "AddChatUsersBody",
      "properties" : {
        "content" : {
          "type" : "string"
        },
        "ownerId" : {
          "type" : "string"
        },
        "addUserIds" : {
          "type" : "String[]"
        },
        "userIds" : {
          "type" : "String[]"
        },
        "addUserNames" : {
          "type" : "String[]"
        },
        "contentType" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "messageId" : {
          "type" : "string"
        }
      }
    },
    "NonEmptyStringValue" : {
      "id" : "NonEmptyStringValue",
      "properties" : {
        "value" : {
          "type" : "string"
        }
      }
    },
    "RelatedFieldInfo" : {
      "id" : "RelatedFieldInfo",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Id of an entity to which field is connected"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the field(call attached variable, contact field)",
          "enum" : [ "CONTACT", "CALL_VARIABLE" ]
        }
      }
    },
    "SocialItem" : {
      "id" : "SocialItem",
      "properties" : {
        "to" : {
          "type" : "string"
        },
        "manualIssue" : {
          "type" : "string"
        },
        "nluTask" : {
          "type" : "integer",
          "format" : "int32"
        },
        "authorTimzone" : {
          "type" : "string"
        },
        "wasResponded" : {
          "type" : "integer",
          "format" : "int32"
        },
        "assignedTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "authorInfluenceScore" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "string"
        },
        "dispositionId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fullData" : {
          "type" : "string"
        },
        "startTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "open" : {
          "type" : "boolean"
        },
        "publicationId" : {
          "type" : "string"
        },
        "sentiment" : {
          "type" : "string"
        },
        "nbaTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nluTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "description" : {
          "type" : "string"
        },
        "authorLocale" : {
          "type" : "string"
        },
        "personId" : {
          "type" : "string"
        },
        "place" : {
          "type" : "string"
        },
        "videoURL" : {
          "type" : "string"
        },
        "workedById" : {
          "type" : "string"
        },
        "attributeSelections" : {
          "type" : "array",
          "description" : "the attributeSelections",
          "items" : {
            "$ref" : "AttributeSelection"
          }
        },
        "topicName" : {
          "type" : "string"
        },
        "datePublished" : {
          "type" : "integer",
          "format" : "int64"
        },
        "wrapTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "authorEnterpriseScore" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "lastDispositionId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dispositionTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "authorLocationName" : {
          "type" : "string"
        },
        "contactId" : {
          "type" : "string"
        },
        "replies" : {
          "type" : "array",
          "items" : {
            "$ref" : "SocialItemReply"
          }
        },
        "topicThreadId" : {
          "type" : "string"
        },
        "authorName" : {
          "type" : "string"
        },
        "socialItemId" : {
          "type" : "string"
        },
        "autoIssue" : {
          "type" : "string"
        },
        "publishedDate" : {
          "type" : "integer",
          "format" : "int64"
        },
        "comment" : {
          "type" : "string"
        },
        "spam" : {
          "type" : "string"
        },
        "sentimentScore" : {
          "type" : "string"
        },
        "profileName" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "rulesTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "likeCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "issue" : {
          "type" : "string"
        },
        "rulesTask" : {
          "type" : "integer",
          "format" : "int32"
        },
        "from" : {
          "type" : "string"
        },
        "linkCaption" : {
          "type" : "string"
        },
        "lang" : {
          "type" : "string"
        },
        "mediaType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "authorId" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "author" : {
          "type" : "string"
        },
        "parentId" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "nbaTask" : {
          "type" : "integer",
          "format" : "int32"
        },
        "profileId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "gotAuthor" : {
          "type" : "integer",
          "format" : "int32"
        },
        "manualSpam" : {
          "type" : "string"
        },
        "manualSentiment" : {
          "type" : "string"
        },
        "disposition" : {
          "type" : "string"
        },
        "resDate" : {
          "type" : "integer",
          "format" : "int64"
        },
        "profile" : {
          "type" : "string"
        },
        "authorAccount" : {
          "type" : "string"
        },
        "replyData" : {
          "type" : "string"
        },
        "talkTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "influenceScore" : {
          "type" : "integer",
          "format" : "int32"
        },
        "relevancy" : {
          "type" : "number",
          "format" : "float"
        },
        "detectedIssue" : {
          "type" : "integer",
          "format" : "int64"
        },
        "source" : {
          "type" : "string"
        },
        "agentName" : {
          "type" : "string"
        },
        "classification" : {
          "type" : "string"
        },
        "linkURL" : {
          "type" : "string"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "the clusterId"
        },
        "notes" : {
          "type" : "array",
          "items" : {
            "$ref" : "Note"
          }
        },
        "spamScore" : {
          "type" : "string"
        },
        "pictureURL" : {
          "type" : "string"
        },
        "iconURL" : {
          "type" : "string"
        }
      }
    },
    "InteractionSessionInfo" : {
      "id" : "InteractionSessionInfo",
      "properties" : {
        "dnis" : {
          "type" : "string",
          "description" : "DNIS"
        },
        "campaignId" : {
          "type" : "string",
          "description" : "Campaign id"
        },
        "channelType" : {
          "type" : "string",
          "description" : "Channel type",
          "enum" : [ "CALL", "VOICE_MAIL", "EMAIL", "CHAT", "SOCIAL", "TEXT" ]
        },
        "contactId" : {
          "type" : "string",
          "description" : "Contact Id"
        },
        "ani" : {
          "type" : "string",
          "description" : "ANI"
        },
        "sessionId" : {
          "type" : "string",
          "description" : "Session id"
        },
        "dispositionId" : {
          "type" : "string",
          "description" : "Disposition id"
        },
        "talkTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Talk duration in milliseconds"
        },
        "startTimestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Call start time in milliseconds since Epoch"
        },
        "acwTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "After call work (ACW) duration in milliseconds"
        },
        "receipt" : {
          "type" : "string",
          "description" : "Call session receipt",
          "enum" : [ "MISSED", "RECEIVED" ]
        },
        "comments" : {
          "type" : "string",
          "description" : "Comments"
        },
        "callType" : {
          "type" : "string",
          "description" : "In case of CALL channel type - call type. For the other channel types - null",
          "enum" : [ "OUTBOUND", "INBOUND", "TEST", "AGENT", "AUTODIAL", "INTERNAL", "QUEUE_CALLBACK", "VISUAL", "INBOUND_VOICEMAIL", "OUTBOUND_VOICEMAIL", "INTERNAL_VOICEMAIL", "AGENT_PREVIEW", "TEST_PREVIEW", "OUTBOUND_PREVIEW" ]
        }
      }
    },
    "TransferToGroupBody" : {
      "id" : "TransferToGroupBody",
      "properties" : {
        "groupId" : {
          "type" : "string"
        },
        "mediaType" : {
          "type" : "string"
        }
      }
    },
    "WorksheetInfo" : {
      "id" : "WorksheetInfo",
      "properties" : {
        "duration" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Worksheet filling duration in milliseconds"
        },
        "answers" : {
          "type" : "Map",
          "description" : "A map where the key is a question id and the value is an answer.\n To determine what question should follow next the value should be compared with the answer criteria in {@link QuestionInfo}"
        },
        "finished" : {
          "type" : "boolean",
          "description" : "Shows if the worksheet is finished"
        }
      }
    },
    "ProfileSurvey" : {
      "id" : "ProfileSurvey",
      "properties" : {
        "templateId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tenantId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "templateQuestion" : {
          "type" : "string"
        },
        "profileId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "enableSurvey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "templateThankyouMessage" : {
          "type" : "string"
        }
      }
    },
    "RateLimit" : {
      "id" : "RateLimit",
      "properties" : {
        "rateLimit" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Rate limit in this time window"
        },
        "message" : {
          "type" : "string"
        },
        "resetEpochSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "UTC epoch time in seconds when it will be reset"
        },
        "httpStatusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "errorCode" : {
          "type" : "string",
          "description" : "HTTP Status Code\n 429 Too Many Requests"
        },
        "rateLimitType" : {
          "type" : "string",
          "enum" : [ "TOO_MANY_REQUESTS", "TOO_MANY_CONCURRENT_REQUESTS" ]
        },
        "rateLimitUnit" : {
          "type" : "string",
          "description" : "Rate limitted time window time unit",
          "enum" : [ "NANOSECONDS", "MICROSECONDS", "MILLISECONDS", "SECONDS", "MINUTES", "HOURS", "DAYS" ]
        }
      }
    },
    "Note" : {
      "id" : "Note",
      "properties" : {
        "tenantId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "campaignId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dispositionId" : {
          "type" : "string"
        },
        "agentId" : {
          "type" : "string"
        },
        "modificationTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "authorId" : {
          "type" : "string"
        },
        "modified" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "string"
        },
        "author" : {
          "type" : "string"
        },
        "sessionId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "socialItemId" : {
          "type" : "string"
        },
        "creationTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "comment" : {
          "type" : "string"
        },
        "note" : {
          "type" : "string"
        }
      }
    },
    "SoftphoneRegistrationInfo" : {
      "id" : "SoftphoneRegistrationInfo",
      "properties" : {
        "licence" : {
          "type" : "string",
          "description" : "Softphone license, if required."
        },
        "enableAcousticEchoCancellation" : {
          "type" : "boolean",
          "description" : "Flag to indicate if acoustic echo cancellation should be enabled/disabled."
        },
        "protocol" : {
          "type" : "string",
          "description" : "Protocol used for connection.\n Used values: \"tls\" in case of secure connection (SRTP), \"udp\" in other cases."
        },
        "rtpPortRangeStart" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Start of RTP ports range allowed for usage"
        },
        "sipPortRangeStart" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Start of SIP ports range allowed for usage"
        },
        "enableAutoGainControl" : {
          "type" : "boolean",
          "description" : "Flag to indicate if automatic gain control should be enabled/disabled."
        },
        "overrideUserLevelSettings" : {
          "type" : "boolean",
          "description" : "Flag to indicate if user(custom) level settings must forcibly overridden."
        },
        "password" : {
          "type" : "string",
          "description" : "Credentials for connection: password"
        },
        "pTime" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Codec pTime value"
        },
        "rtpPortRangeStop" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Stop of RTP ports range allowed for usage"
        },
        "sipPortRangeStop" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Stop of SIP ports range allowed for usage"
        },
        "sipProxyServers" : {
          "type" : "array",
          "description" : "Array of SIP proxy servers for connection.\n First item - main server, second item - backup server.\n Item is equal to NULL in case when it is not defined.",
          "items" : {
            "type" : "string"
          }
        },
        "codecs" : {
          "type" : "array",
          "description" : "List of codecs available for usage.\n Each record has next format: Name/Rate/Channels\n For example:\n    G723/8000/1\n    G729/8000/1\n    PCMA/8000/1\n    PCMU/8000/1\n    etc.",
          "items" : {
            "type" : "string"
          }
        },
        "username" : {
          "type" : "string",
          "description" : "Credentials for connection: username (station id in SIP terminology)"
        },
        "silenceSuppression" : {
          "type" : "boolean",
          "description" : "Flag of used silence suppresion"
        },
        "softphoneType" : {
          "type" : "string",
          "description" : "Softphone type",
          "enum" : [ "COUNTERPATH", "PJSIP" ]
        }
      }
    },
    "StringValue" : {
      "id" : "StringValue",
      "properties" : {
        "value" : {
          "type" : "string"
        }
      }
    },
    "DisposeOptionsInfo" : {
      "id" : "DisposeOptionsInfo",
      "properties" : {
        "dispositionId" : {
          "type" : "string",
          "description" : "ID of the disposition to set"
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Optional field that indicates the disposition time-out value in milliseconds.\n\n Use when the agent wants to change the default value.\n The time-out value must be positive and equal to or less than one year (366*24*60*60*1000).\n For details, see {@link DispositionInfo#timeout}.\n <p>\n Must be null if the disposition does not have {@link DispositionFlag#ALLOW_SET_REDIAL_TIMER\n ALLOW_SET_REDIAL_TIMER} or {@link DispositionFlag#ALLOW_SET_REACTIVATE_TIMER ALLOW_SET_REACTIVATE_TIMER} flag."
        }
      }
    },
    "StationInfo" : {
      "id" : "StationInfo",
      "properties" : {
        "state" : {
          "type" : "string",
          "description" : "Current state of the agent's station.",
          "enum" : [ "DISCONNECTED", "CONNECTING", "CONNECTED" ]
        },
        "stationId" : {
          "type" : "string",
          "description" : "Station identificator.\n It can be softphone id, PSTN number or gateway address"
        },
        "stationType" : {
          "type" : "string",
          "description" : "Station type.\n One of:\n  PSTN\n  SOFTPHONE\n  VoIP",
          "enum" : [ "PSTN", "SOFTPHONE", "GATEWAY", "EMPTY" ]
        }
      },
      "required" : [ "stationType" ]
    },
    "AssignAttributeBody" : {
      "id" : "AssignAttributeBody",
      "properties" : {
        "valueId" : {
          "type" : "string"
        },
        "attributeId" : {
          "type" : "string"
        }
      }
    },
    "SendEmailBody" : {
      "id" : "SendEmailBody",
      "properties" : {
        "toAddresses" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "filenames" : {
          "type" : "String[]"
        },
        "profileId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "authorName" : {
          "type" : "string"
        },
        "bccAddresses" : {
          "type" : "string"
        },
        "replyMsg" : {
          "type" : "string"
        },
        "authorId" : {
          "type" : "string"
        },
        "ccAddresses" : {
          "type" : "string"
        }
      }
    },
    "AttributeSelection" : {
      "id" : "AttributeSelection",
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeValue" : {
          "type" : "string"
        },
        "attributeValueId" : {
          "type" : "string"
        },
        "attributeId" : {
          "type" : "string"
        },
        "itemId" : {
          "type" : "string"
        }
      }
    },
    "SessionWorksheetInfo" : {
      "id" : "SessionWorksheetInfo",
      "properties" : {
        "answers" : {
          "type" : "Map",
          "description" : "The same as {@link WorksheetInfo#answers}"
        }
      }
    },
    "ReasonCodeInfo" : {
      "id" : "ReasonCodeInfo",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Identificator of the reason code"
        },
        "selectable" : {
          "type" : "boolean",
          "description" : "The flag indicates if the reason can be selected in UI as a not ready reason.\n If the flag is true then {@link #id} can be specified as identificator in\n  {@link PresenceInfo#setNotReadyReasonCodeId(String)}\n when new presence is set by invoking of\n  {@link IAgentService#setPresence(String, PresenceInfo)}.\n\n  In case of false this reason code should be only depicted on UI."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the reason code."
        },
        "displayName" : {
          "type" : "string",
          "description" : "Name of the reason code which should be displayed to user.\n This field contains translated reason code name."
        }
      }
    },
    "VoicemailInfo" : {
      "id" : "VoicemailInfo",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Item id"
        },
        "campaignId" : {
          "type" : "string",
          "description" : "Campaign to which voicemail belongs"
        },
        "recordings" : {
          "type" : "array",
          "description" : "List of voicemail recordings",
          "items" : {
            "$ref" : "RecordingInfo"
          }
        },
        "created" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Timestamp of creation date"
        },
        "activeContact" : {
          "type" : "ContactInfo",
          "description" : "Selected contact"
        },
        "length" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Length of recoding in milliseconds"
        },
        "state" : {
          "type" : "string",
          "description" : "Current state of voicemail task",
          "enum" : [ "NEW", "PROCESSING", "POSTPONED", "PROCESSED", "REJECTED" ]
        },
        "number" : {
          "type" : "string",
          "description" : "Number from which voicemail has been received"
        },
        "contactLookupResult" : {
          "type" : "ContactLookupResultInfo",
          "description" : "Contact lookup information related to voicemail item.\n Not empty for voicemails of type SKILL only"
        },
        "comment" : {
          "type" : "string",
          "description" : "Comment for current voicemail"
        },
        "type" : {
          "type" : "string",
          "description" : "Indicates type of voicemail item",
          "enum" : [ "PERSONAL", "SKILL" ]
        },
        "variables" : {
          "type" : "Map",
          "description" : "Collection of voicemail attached variables"
        }
      }
    },
    "ConnectorResponseInfo" : {
      "id" : "ConnectorResponseInfo",
      "properties" : {
        "httpResponseCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "HTTP response code received in reply for connector execution."
        }
      }
    },
    "AgentOptionsInfo" : {
      "id" : "AgentOptionsInfo",
      "properties" : {
        "userFilter" : {
          "type" : "UserFilter",
          "description" : "SCC Specific user options."
        },
        "options" : {
          "type" : "array",
          "description" : "Set of agent options",
          "items" : {
            "$ref" : "AgentOptions"
          },
          "uniqueItems" : true
        }
      }
    },
    "ChatRequestBody" : {
      "id" : "ChatRequestBody",
      "properties" : {
        "groupId" : {
          "type" : "string"
        },
        "groupName" : {
          "type" : "string"
        },
        "accountNumber" : {
          "type" : "string"
        },
        "locaion" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "customFields" : {
          "type" : "MessageBodyItem[]"
        },
        "name" : {
          "type" : "string"
        },
        "campaign" : {
          "type" : "string"
        },
        "messageId" : {
          "type" : "string"
        }
      }
    },
    "SpeedDialCallDestinationInfo" : {
      "id" : "SpeedDialCallDestinationInfo",
      "properties" : {
        "campaignId" : {
          "type" : "string",
          "description" : "Id of campaign to which the call should belong to."
        },
        "contactId" : {
          "type" : "string",
          "description" : "Usually you should omit this field (should leave it null). You may specify it only if the previous try to call\n the same speed dial number throws an exception with id = {@link\n com.five9.svc.vcc.interfaces.ExceptionCodes#Q_MULTIPLE_CONTACTS_SELECT Q_MULTIPLE_CONTACTS_SELECT} (1002).\n See {@link ExternalCallDestinationInfo#checkMultipleContacts} for more details."
        },
        "checkMultipleContacts" : {
          "type" : "boolean",
          "description" : "For the description, see {@link ExternalCallDestinationInfo#checkMultipleContacts}."
        },
        "speedDialId" : {
          "type" : "string",
          "description" : "Speed dial number identifier"
        },
        "skipDNCCheck" : {
          "type" : "boolean",
          "description" : "For the description, see {@link ExternalCallDestinationInfo#skipDNCCheck}."
        }
      }
    },
    "ReplyToEmailBody" : {
      "id" : "ReplyToEmailBody",
      "properties" : {
        "toAddresses" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "filenames" : {
          "type" : "String[]"
        },
        "profileId" : {
          "type" : "string"
        },
        "authorName" : {
          "type" : "string"
        },
        "bccAddresses" : {
          "type" : "string"
        },
        "replyMsg" : {
          "type" : "string"
        },
        "authorId" : {
          "type" : "string"
        },
        "ccAddresses" : {
          "type" : "string"
        }
      }
    },
    "InteractionHistoryViewOptions" : {
      "id" : "InteractionHistoryViewOptions",
      "properties" : {
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum number of records return for each lookup iteration."
        },
        "mediaTypes" : {
          "type" : "array",
          "description" : "List of media types by which records should be selected.",
          "items" : {
            "type" : "integer"
          },
          "uniqueItems" : true
        },
        "period" : {
          "type" : "string",
          "description" : "Period of time for which records should be selected.",
          "enum" : [ "CURRENT_SESSION", "TODAY", "YESTERDAY", "LAST_7_DAYS", "LAST_WEEK", "LAST_14_DAYS", "LAST_30_DAYS", "LAST_60_DAYS" ]
        },
        "campaignIds" : {
          "type" : "array",
          "description" : "List of campaign ids by which records should be selected.",
          "items" : {
            "type" : "string"
          },
          "uniqueItems" : true
        },
        "includeDialAttempts" : {
          "type" : "boolean",
          "description" : "Indicates if dial attempts should be selected."
        }
      }
    },
    "RecordingInfo" : {
      "id" : "RecordingInfo",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Recording id"
        },
        "created" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Timestamp of creation date"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of a recording"
        },
        "length" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Length of recoding in milliseconds"
        }
      }
    },
    "ChatOwnerBody" : {
      "id" : "ChatOwnerBody",
      "properties" : {
        "ownerId" : {
          "type" : "string"
        },
        "userIds" : {
          "type" : "String[]"
        },
        "newUserId" : {
          "type" : "string"
        },
        "messageId" : {
          "type" : "string"
        }
      }
    },
    "ThirdPartyConfig" : {
      "id" : "ThirdPartyConfig",
      "properties" : {
        "map" : {
          "type" : "Map"
        },
        "config" : {
          "type" : "Map"
        }
      }
    },
    "SetSettingsBody" : {
      "id" : "SetSettingsBody",
      "properties" : {
        "sentiments" : {
          "type" : "Long[]"
        },
        "socialACDType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dateRangeStart" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dispositions" : {
          "type" : "Long[]"
        },
        "forUsername" : {
          "type" : "string"
        },
        "refreshRate" : {
          "type" : "integer",
          "format" : "int32"
        },
        "priorities" : {
          "type" : "Long[]"
        },
        "spams" : {
          "type" : "Long[]"
        },
        "chatACDType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lockByUserId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fromUsername" : {
          "type" : "string"
        },
        "dateRangeEnd" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clusters" : {
          "type" : "Long[]"
        },
        "forUserId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "includeMine" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isFIFO" : {
          "type" : "integer",
          "format" : "int32"
        },
        "autoLock" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortInfluence" : {
          "type" : "integer",
          "format" : "int32"
        },
        "emailACDType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "profiles" : {
          "type" : "Long[]"
        },
        "lockByDate" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AgentGroupInfo" : {
      "id" : "AgentGroupInfo",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Id of the group."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the agent group."
        }
      }
    },
    "AudioFileInfo" : {
      "id" : "AudioFileInfo",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Audio file id"
        },
        "duration" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Audio file duration in milliseconds"
        },
        "description" : {
          "type" : "string",
          "description" : "Audio file description"
        },
        "name" : {
          "type" : "string",
          "description" : "Audio file title"
        }
      }
    },
    "LeaveConferenceInfo" : {
      "id" : "LeaveConferenceInfo",
      "properties" : {
        "dispositionTimeout" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For the description, see {@link DisposeOptionsInfo#timeout}.\n <p>\n Must be null if {@link #isToTransferCallOwnership} is true or null."
        },
        "dispositionId" : {
          "type" : "string",
          "description" : "For the description, see {@link DisposeOptionsInfo#dispositionId}.\n <p>\n Must be null if {@link #isToTransferCallOwnership} is true or null."
        },
        "isToTransferCallOwnership" : {
          "type" : "boolean",
          "description" : "If false then call will be dispositioned with {@link #dispositionId} value.\n If true then last agent to leave conference will take call ownership (must disposition call).\n <p>\n Must be null if {@link CallInfo#conferenceDispositioning} is null\n <p>\n Must be true if {@link CallInfo#conferenceDispositioning} = {@link ConferenceDispositioning#LAST_AGENT_DISPOSITION LAST_AGENT_DISPOSITION}\n and conference participant is an agent.\n <p>\n Must be false if {@link CallInfo#conferenceDispositioning} = {@link ConferenceDispositioning#INITIATOR_DISPOSITION INITIATOR_DISPOSITION}\n <p>\n Must be either true or false if {@link CallInfo#conferenceDispositioning} = {@link ConferenceDispositioning#INITIATOR_DECIDES_WHO_DISPOSITION INITIATOR_DECIDES_WHO_DISPOSITION}"
        }
      }
    },
    "ConferenceInternalParticipantInfo" : {
      "id" : "ConferenceInternalParticipantInfo",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Identifier of object (agent or skill) to add to conference."
        },
        "warm" : {
          "type" : "boolean"
        },
        "includeCallerInfo" : {
          "type" : "boolean",
          "description" : "See {@link ConferenceExternalParticipantInfo#includeCallerInfo} for description."
        },
        "isWarm" : {
          "type" : "boolean",
          "description" : "See {@link ConferenceExternalParticipantInfo#isWarm} for description."
        }
      }
    },
    "DialingRestrictionInfo" : {
      "id" : "DialingRestrictionInfo",
      "properties" : {
        "fieldId" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "NO_RESTRICTIONS", "WRONG_NUMBER", "DNC", "DND", "DISABLED_IN_PROFILE", "MAX_REDIAL_ATTEMPTS", "CONTACT_REMOVED", "DIALING_RULE", "PROFILE_LIMITATION", "CONTACT_RESTRICTION", "NUMBER_REDIAL_RESTRICTION", "NUMBER_DND_RESTRICTION", "FINAL_CONTACT", "DISABLED_BY_CRITERIA_IN_CURR_TIME", "DISABLED_BY_CRITERIA_IN_CURR_TIME_AND_FUTURE" ]
        }
      }
    },
    "PlayerTrackInfo" : {
      "id" : "PlayerTrackInfo",
      "properties" : {
        "duration" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Total track duration in milliseconds"
        },
        "trackId" : {
          "type" : "string",
          "description" : "Track Id"
        },
        "trackType" : {
          "type" : "string",
          "description" : "Track type",
          "enum" : [ "SKILL_PROMPT", "VOICEMIAL" ]
        },
        "elapsedTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Track elapsed time in milliseconds"
        }
      }
    },
    "SessionExpirationInfo" : {
      "id" : "SessionExpirationInfo",
      "properties" : {
        "pingInterval" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Number of milliseconds after which the session expires if there have been no requests from the client to the\n server."
        },
        "maxInactivityTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Number of milliseconds until the session expires because of user's inactivity."
        },
        "timeToWarnBeforeLogout" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Number of milliseconds to warn the user before the session expires."
        },
        "expirationMode" : {
          "type" : "string",
          "description" : "Indicates how agent's session should expire.",
          "enum" : [ "NEVER_EXPIRE", "TRACK_ACTIVITY" ]
        }
      }
    },
    "ManualConnectorInfo" : {
      "id" : "ManualConnectorInfo",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "ID of the connector. Should essentially be used to request generation of {@link PendingConnectorInfo}."
        },
        "description" : {
          "type" : "string",
          "description" : "The description of the connector."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the connector."
        }
      }
    },
    "DispositionBody" : {
      "id" : "DispositionBody",
      "properties" : {
        "profileId" : {
          "type" : "string"
        },
        "dispositionId" : {
          "type" : "string"
        },
        "mediaType" : {
          "type" : "string"
        },
        "isClose" : {
          "type" : "string"
        }
      }
    },
    "FullStateInfo" : {
      "id" : "FullStateInfo",
      "properties" : {
        "currentState" : {
          "type" : "PresenceInfo",
          "description" : "Current agent's state."
        },
        "currentStateTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Amount of time (in milliseconds) passed since the moment when the current state had been set."
        },
        "pendingState" : {
          "type" : "PresenceInfo",
          "description" : "State that is going to be set after the active call ends.\n This field is null when either there is no active call or the state is not going to be changed."
        }
      }
    },
    "AgentInfo" : {
      "id" : "AgentInfo",
      "properties" : {
        "extension" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "timeZoneID" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean"
        },
        "userName" : {
          "type" : "string"
        },
        "fullName" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "avatarURL" : {
          "type" : "string"
        },
        "availableChannels" : {
          "type" : "array",
          "items" : {
            "$ref" : "ChannelType"
          }
        }
      }
    },
    "Five9ExceptionDetail" : {
      "id" : "Five9ExceptionDetail",
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "Error Message"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "UTC time in milliseconds"
        },
        "source" : {
          "type" : "string",
          "description" : "Use this to identify the source of the problem"
        },
        "context" : {
          "type" : "Map",
          "description" : "context: Map of string values to report additional information about the problem.\n Say when a login failed, then userId can be sent as part of the context."
        },
        "errorCode" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "client specific errorCode for automated systems to track"
        }
      }
    },
    "VoicemailCountInfo" : {
      "id" : "VoicemailCountInfo",
      "properties" : {
        "totalItems" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total number of voicemails"
        },
        "newItems" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of new voicemails"
        }
      }
    },
    "AgentSkillInfo" : {
      "id" : "AgentSkillInfo",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Id of the skill."
        },
        "motD" : {
          "type" : "string",
          "description" : "Message of the day for the skill members."
        },
        "name" : {
          "type" : "string",
          "description" : "Skill name."
        }
      }
    },
    "PersonalGreetingInfo" : {
      "id" : "PersonalGreetingInfo",
      "properties" : {
        "hasGreeting" : {
          "type" : "boolean",
          "description" : "Indicates if agent has hasGreeting personal greeting."
        }
      }
    },
    "NoteBody" : {
      "id" : "NoteBody",
      "properties" : {
        "note" : {
          "type" : "string"
        },
        "authorId" : {
          "type" : "string"
        }
      }
    },
    "CampaignsConfigInfo" : {
      "id" : "CampaignsConfigInfo",
      "properties" : {
        "selectNoneAllowed" : {
          "type" : "boolean",
          "description" : "Indicates if the agent is allowed to select no campaign"
        },
        "defaultCampaignId" : {
          "type" : "string",
          "description" : "Id of the default campaign"
        },
        "selectAllowed" : {
          "type" : "boolean",
          "description" : "Indicates if the agent is allowed to select the campaign"
        },
        "campaignIds" : {
          "type" : "array",
          "description" : "Collection of campaign Ids",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ContentDisposition" : {
      "id" : "ContentDisposition",
      "properties" : {
        "values" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "parameters" : {
          "type" : "Map"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "String[]" : {
      "id" : "String[]",
      "properties" : {
        "hash" : {
          "type" : "integer",
          "format" : "int32"
        },
        "empty" : {
          "type" : "boolean"
        },
        "value" : {
          "type" : "char[]"
        }
      }
    },
    "ClusterBody" : {
      "id" : "ClusterBody",
      "properties" : {
        "clusterId" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ContactInfo" : {
      "id" : "ContactInfo",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "accounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "AuthorAccount"
          }
        },
        "modificationTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Contact modification time. API clients mustn't change it, it will make VCC to refuse contact."
        },
        "notes" : {
          "type" : "array",
          "items" : {
            "$ref" : "Note"
          }
        },
        "fields" : {
          "type" : "Map",
          "description" : "Map from field Ids to field values."
        }
      }
    },
    "InteractionHistoryViewInfo" : {
      "id" : "InteractionHistoryViewInfo",
      "properties" : {
        "hasMore" : {
          "type" : "boolean",
          "description" : "Indicate if view has more records."
        },
        "id" : {
          "type" : "string",
          "description" : "Id of the history view. It is used to iterate over view records by calling ..."
        },
        "records" : {
          "type" : "array",
          "description" : "Portion of history records from the view.\n List of times contains equals or less number of records than {@link InteractionHistoryViewOptions#limit}.",
          "items" : {
            "$ref" : "SocialItem"
          }
        }
      }
    },
    "ReturnCallExternalOptionInfo" : {
      "id" : "ReturnCallExternalOptionInfo",
      "properties" : {
        "contactId" : {
          "type" : "string",
          "description" : "Usually you should omit this field (should leave it null). You may specify it only if the previous try to return\n the call for the same voicemail throws an exception with id =\n {@link com.five9.svc.vcc.interfaces.ExceptionCodes#Q_MULTIPLE_CONTACTS_SELECT Q_MULTIPLE_CONTACTS_SELECT} (1002).\n See {@link ExternalCallDestinationInfo#checkMultipleContacts} for more details."
        },
        "checkMultipleContacts" : {
          "type" : "boolean",
          "description" : "For the description, see {@link ExternalCallDestinationInfo#checkMultipleContacts}."
        },
        "number" : {
          "type" : "string",
          "description" : "Number to call. Optional field.\n The idea is to let the user select a number to call if the voicemail\n originator is a contact with multiple numbers.\n If this field is not null and the contact is known\n ({@link VoicemailInfo#contactId} is not null)), the call will be made to\n this number.\n Otherwise the voicemail number will be applied (see\n {@link VoicemailInfo#number})."
        },
        "skipDNCCheck" : {
          "type" : "boolean",
          "description" : "For the description, see {@link ExternalCallDestinationInfo#skipDNCCheck}."
        }
      }
    },
    "CallbackInfo" : {
      "id" : "CallbackInfo",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "campaignId" : {
          "type" : "string",
          "description" : "Campaign Id to which callback belongs"
        },
        "contactId" : {
          "type" : "string",
          "description" : "Callback destination contact id. May be non-null in case number is filled only"
        },
        "agentId" : {
          "type" : "string",
          "description" : "Callback destination agentId. Either {@link #number} or {@link #agentId} must be filled"
        },
        "number" : {
          "type" : "string",
          "description" : "External number for make callback. Either {@link #number} or {@link #agentId} must be filled"
        },
        "dueDate" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Callback due date. Epoch time in milliseconds"
        },
        "comments" : {
          "type" : "string"
        },
        "completed" : {
          "type" : "boolean",
          "description" : "Indicates if the callback is completed"
        }
      }
    },
    "ConferenceSpeedDialParticipantInfo" : {
      "id" : "ConferenceSpeedDialParticipantInfo",
      "properties" : {
        "warm" : {
          "type" : "boolean"
        },
        "includeCallerInfo" : {
          "type" : "boolean",
          "description" : "See {@link ConferenceExternalParticipantInfo#includeCallerInfo} for description."
        },
        "isWarm" : {
          "type" : "boolean",
          "description" : "See {@link ConferenceExternalParticipantInfo#isWarm} for description."
        },
        "checkDNC" : {
          "type" : "boolean",
          "description" : "See {@link ExternalCallDestinationInfo#checkDNC} for description."
        },
        "speedDialId" : {
          "type" : "string",
          "description" : "Speed dial id."
        }
      }
    },
    "PreviewInfo" : {
      "id" : "PreviewInfo",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Preview identificator"
        },
        "campaignId" : {
          "type" : "string",
          "description" : "Campaign identificator associated to this preview."
        },
        "restrictions" : {
          "type" : "array",
          "description" : "Set of dialing restrictions.",
          "items" : {
            "$ref" : "DialingRestrictionInfo"
          }
        },
        "state" : {
          "type" : "string",
          "description" : "State of this preview.",
          "enum" : [ "PREVIEW", "ON_CALL", "RENEWING", "POSTPONED", "FINISHED" ]
        },
        "beforeTimeoutTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time in milliseconds left before timeout and automatic call making.\n Special values:\n -1 = CallConstants.UNLIMITED_PREVIEW_TIME for unlimited preview\n 0 = CallConstants.ZERO_PREVIEW_TIME for immediate automatic call"
        },
        "contact" : {
          "type" : "ContactInfo",
          "description" : "Contact associated to this preview."
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Timeout in milliseconds for the agent reviewing the contact before\n calling. When the timeout is expired automatic call will be made.\n Special values:\n -1 = CallConstants.UNLIMITED_PREVIEW_TIME for unlimited preview\n 0 = CallConstants.ZERO_PREVIEW_TIME for immediate automatic call"
        },
        "variables" : {
          "type" : "Map",
          "description" : "Collection of preview attached variables"
        }
      }
    },
    "AssignTopicBody" : {
      "id" : "AssignTopicBody",
      "properties" : {
        "topicId" : {
          "type" : "string"
        }
      }
    },
    "ChannelInfo" : {
      "id" : "ChannelInfo",
      "properties" : {
        "maxAllowedInteractions" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Max allowed simultaneously interactions for the channel"
        },
        "type" : {
          "type" : "string",
          "description" : "Channel type",
          "enum" : [ "CALL", "VOICE_MAIL", "EMAIL", "CHAT", "SOCIAL", "TEXT" ]
        },
        "intelligentRouting" : {
          "type" : "boolean",
          "description" : "On/Off mark of intelligent routing for the channel"
        }
      }
    },
    "PresenceInfo" : {
      "id" : "PresenceInfo",
      "properties" : {
        "notReadyReasonCodeId" : {
          "type" : "string"
        },
        "readyChannels" : {
          "type" : "array",
          "items" : {
            "$ref" : "ChannelType"
          }
        }
      },
      "required" : [ "readyChannels" ]
    },
    "HelpRequestDestinationInfo" : {
      "id" : "HelpRequestDestinationInfo",
      "properties" : {
        "groupSupervisors" : {
          "type" : "string",
          "description" : "Supervisors in specified groupId will receive the request. Optional, mutual exclusive with other supervisor related fields."
        },
        "mySkillsSupervisors" : {
          "type" : "boolean",
          "description" : "Supervisors with agent skills will receive the request. Mutual exclusive with other supervisor related fields."
        },
        "skillSupervisors" : {
          "type" : "string",
          "description" : "Supervisors with specified skillId will receive the request. Optional, mutual exclusive with other supervisor related fields."
        },
        "allSupervisors" : {
          "type" : "boolean",
          "description" : "All supervisors will receive the request. Mutual exclusive with other supervisor related fields."
        },
        "allAdministrators" : {
          "type" : "boolean",
          "description" : "All administrators will receive the request"
        }
      }
    },
    "TransferToAgentBody" : {
      "id" : "TransferToAgentBody",
      "properties" : {
        "agentId" : {
          "type" : "string"
        },
        "mediaType" : {
          "type" : "string"
        }
      }
    },
    "MaintenanceNoticeInfo" : {
      "id" : "MaintenanceNoticeInfo",
      "properties" : {
        "annotation" : {
          "type" : "string",
          "description" : "Notice annotation"
        },
        "id" : {
          "type" : "string",
          "description" : "Notice id"
        },
        "text" : {
          "type" : "string",
          "description" : "HTML content of the notice"
        },
        "accepted" : {
          "type" : "boolean"
        }
      }
    },
    "SkillTransferDestinationInfo" : {
      "id" : "SkillTransferDestinationInfo",
      "properties" : {
        "skillIds" : {
          "type" : "array",
          "description" : "Set of destination skill ids",
          "items" : {
            "type" : "string"
          },
          "uniqueItems" : true
        },
        "recordVoicemail" : {
          "type" : "boolean",
          "description" : "See {@link AgentTransferDestinationInfo#recordVoicemail}"
        },
        "warm" : {
          "type" : "boolean"
        },
        "isWarm" : {
          "type" : "boolean",
          "description" : "See {@link ExternalTransferDestinationInfo#isWarm}"
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "See {@link AgentTransferDestinationInfo#timeout}"
        }
      }
    },
    "ExternalTransferDestinationInfo" : {
      "id" : "ExternalTransferDestinationInfo",
      "properties" : {
        "dispositionTimeout" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For the description, see {@link DisposeOptionsInfo#timeout}."
        },
        "warm" : {
          "type" : "boolean"
        },
        "isWarm" : {
          "type" : "boolean",
          "description" : "Indicates if transfer should be in warm mode.\n Warm mode is not applicable for transferring parked calls."
        },
        "dispositionId" : {
          "type" : "string",
          "description" : "ID of the disposition that should be set to the transferred call."
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Transfer timeout in milliseconds.\n It limits how long the call can wait until answered on the destination side.\n If the timeout expires, the call is returned to the agent as a parked call.\n 0 indicates unlimited timeout."
        },
        "destination" : {
          "type" : "ExternalCallDestinationInfo",
          "description" : "External destination info"
        }
      }
    },
    "SentimentBody" : {
      "id" : "SentimentBody",
      "properties" : {
        "sentiment" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ConferenceCampaignParticipantInfo" : {
      "id" : "ConferenceCampaignParticipantInfo",
      "properties" : {
        "campaignId" : {
          "type" : "string",
          "description" : "Campaign ID.\n This should be one of campaigns returned by {@link IAgentService#getDestinationCampaigns}."
        },
        "warm" : {
          "type" : "boolean"
        },
        "isWarm" : {
          "type" : "boolean",
          "description" : "See {@link ConferenceExternalParticipantInfo#isWarm} for description."
        }
      }
    },
    "DashboardSubscriptionInfo" : {
      "id" : "DashboardSubscriptionInfo",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Subscription type",
          "enum" : [ "AGENT", "SKILL", "DISPOSITION" ]
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "Subscription Id"
        }
      }
    },
    "ExchangeMessage" : {
      "id" : "ExchangeMessage",
      "properties" : {
        "tenantId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "users" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "userId" : {
          "type" : "string"
        },
        "msgBody" : {
          "type" : "string"
        },
        "senderId" : {
          "type" : "string"
        },
        "messageRead" : {
          "type" : "boolean"
        },
        "creationTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "guuid" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "messageId" : {
          "type" : "string"
        },
        "originatorId" : {
          "type" : "string"
        }
      }
    },
    "ReplyToSocialBody" : {
      "id" : "ReplyToSocialBody",
      "properties" : {
        "parentId" : {
          "type" : "string"
        },
        "profileId" : {
          "type" : "string"
        },
        "authorName" : {
          "type" : "string"
        },
        "socialItemId" : {
          "type" : "string"
        },
        "replyMsg" : {
          "type" : "string"
        },
        "mediaType" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "authorId" : {
          "type" : "string"
        }
      }
    },
    "SkillCallDestinationInfo" : {
      "id" : "SkillCallDestinationInfo",
      "properties" : {
        "skillId" : {
          "type" : "string",
          "description" : "Skill ID"
        }
      }
    },
    "ExternalCallDestinationInfo" : {
      "id" : "ExternalCallDestinationInfo",
      "properties" : {
        "campaignId" : {
          "type" : "string",
          "description" : "Campaign Id to which call belongs."
        },
        "contactId" : {
          "type" : "string",
          "description" : "Related contact id (optional)"
        },
        "checkMultipleContacts" : {
          "type" : "boolean",
          "description" : "Indicates if a check for multiple contacts should be made.\n The current sever implementation applies this flag only when making a call.\n The server ignores the flag when transferring or adding to conference.\n\n If the {@link #number number} matches more than one contact and it is\n not clear what dialing rules to apply, server returns error\n Q_MULTIPLE_CONTACTS_SELECT(1002). In this case, client should specify\n the contact explicitly.\n\n <br>UI scenario should be:\n <ol>\n <li> set this flag to true, and make the necessary request\n <li> if server returns the error, show the list of the matched contacts\n      to let the user choose the right one\n <li> if the user selects a contact, apply it to {@link #contactId};\n      or if the user chooses none, set the flag to false, and\n      contact-specific dialing rules will be ignored\n <li> retry the request\n </ol>"
        },
        "number" : {
          "type" : "string",
          "description" : "Phone number of external destination"
        },
        "skipDNCCheck" : {
          "type" : "boolean",
          "description" : "Indicates client wants to skip checking if number in DNC list\n\n <br>UI scenario should be:\n <ol>\n <li> set this flag to false, and make the necessary request\n <li> if server returns an error, do one of the following things\n      according to the error returned:<br>\n      NUMBER_IN_DNC_LIST(10006) - show an error dialog;<br>\n      Q_NUMBER_IN_DNC_LIST_FORCE(1001) - ask the user for confirmation of\n      the request\n <li> if the user confirms, set this flag to true and retry the request\n </ol>"
        }
      }
    },
    "AgentCallDestinationInfo" : {
      "id" : "AgentCallDestinationInfo",
      "properties" : {
        "agentId" : {
          "type" : "string",
          "description" : "Destination agent ID"
        }
      }
    },
    "SubscriptionInfo" : {
      "id" : "SubscriptionInfo",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Subscription id"
        },
        "name" : {
          "type" : "string",
          "description" : "Subscription name"
        },
        "parameters" : {
          "type" : "Map",
          "description" : "Subscription parameters. Key is a name of a parameter."
        },
        "subscribed" : {
          "type" : "boolean",
          "description" : "Specifies if the agent is subscribed on this subscription"
        }
      }
    }
  }
}