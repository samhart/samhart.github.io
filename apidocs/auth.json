{
  "apiVersion" : "1",
  "swaggerVersion" : "1.2",
  "basePath" : "/appsvcs/svc/rs/",
  "resourcePath" : "/auth",
  "apis" : [ {
    "path" : "/auth/anon",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "anon",
      "type" : "Token",
      "parameters" : [ {
        "type" : "AnonUser",
        "paramType" : "body",
        "name" : "anon",
        "required" : true
      } ],
      "summary" : "Create Anonymous User Sessions.",
      "notes" : "\n        Current implementation would create anonymous user session for Chat Client.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/auth/exceptions",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "putExceptions",
      "type" : "void",
      "parameters" : [ {
        "type" : "Five9ExceptionDetailWrapper",
        "paramType" : "body",
        "name" : "exceptionDetails",
        "required" : true
      } ],
      "summary" : "<b>Note:</b> Use this to only report errors happened during user Login \n        For all other errors after login with a valid session report them using /client_tools/exceptions API\n        <br/>\n        <b>Note:</b> DO NOT LOG Server Sent error messages back to the server.",
      "notes" : " \n        All Server sent error messages are already logged and then sent to the client.\n        These API are to be used ONLY to report client specific error.\n        <br/>\n        This exceptions operation is used to send UI/Client exceptions or errors \n        to be recorded in the server for analysis.\n        <br/>\n        The Exception Detail Wrapper takes an array of Five9ExceptionDetail \n        to allow the UI/Client to submit multiple errors at the same time.\n        <br/>\n        timestamp: UTC time in milliseconds\n        <br/>\n        source: Use this to identify the source of the problem\n        <br/>\n        errorCode: client specific errorCode for automated systems to track\n        <br/>\n        message: Error Message\n        <br/>\n        context: Map of string values to report additional information about the problem. \n        <br/>\n        Say when a login failed, then userId can be sent as part of the context.\n        <br/>\n        Say for example context can contain Browser information, Java Script error and line number which failed etc.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/auth/login",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "login",
      "type" : "Token",
      "parameters" : [ {
        "type" : "Auth",
        "paramType" : "body",
        "name" : "auth",
        "required" : true
      } ],
      "summary" : "Login Scenario: <br/>\n         1.",
      "notes" : " User using the same browser / same cookiestore and \n         login using different usernames without logout of the previous sessions. \n         First user will be force logout and disconnected from his web socket session \n         then second user will be logged in with new session. <br/>\n         2. User browser crashed, user login again now;\n         Auth.policy (ForceIn or AttachExisting)\n         <br/>\n         ForceIn - This policy would logout existing user session and create a new Session (new tokenId) \n         <br/>\n         AttachExisting - This policy would reuse existing user session and Will NOT create a new Session\n         <br/> \n         <ul><b>User A Login</b> \n         <ul>logged-in [Set-Cookie: Authorization: Bearer tokenId]\n         <ul>connect to web socket [Set-Cookie: JSessionId]\n         <ul>User A Login (Again without logging out)\n         <ul> User A login request is validated for username/password\n         <ul> When Server configured reissue active session on login \n         <ul> Return the old session. No Password or new Role/Permissions loaded.\n         <ul> When Server configured NOT to reissue active session on login \n         <ul> Create New Session [Set-Cookie: Authorization: Bearer tokenId, Delete Cookie JSessionId]\n         <br/><br/>\n         <ul><b>Same Browser (Different Tab) - User B Login</b>\n         <ul>User B login request validated for username/password\n         <ul>User A Login JSessionId removed [Set-Cookie: JSessionId=deleted]  \n         <ul>User B logged-in [Set-Cookie: Authorization: Bearer tokenId]\n         <ul>User B connect to web socket [Set-Cookie: JSessionId]\n         </br/>",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/auth/logout",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "logout",
      "type" : "void",
      "summary" : "Operation to end the current user HTTP & REST API session with the server.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/auth/metadata",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "metadata",
      "type" : "Token",
      "summary" : "Retrieve meta information about current user session",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Success"
      }, {
        "code" : 429,
        "message" : "Too many requests were sent to the server. Resend your request later",
        "responseModel" : "RateLimit"
      }, {
        "code" : 435,
        "message" : "An error occurred during processing. See the details of the error.",
        "responseModel" : "Five9ExceptionDetail"
      } ],
      "consumes" : [ "application/json" ],
      "produces" : [ "application/json" ]
    } ]
  } ],
  "models" : {
    "Five9ExceptionDetail[]" : {
      "id" : "Five9ExceptionDetail[]",
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "Error Message"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "UTC time in milliseconds"
        },
        "source" : {
          "type" : "string",
          "description" : "Use this to identify the source of the problem"
        },
        "context" : {
          "type" : "Map",
          "description" : "context: Map of string values to report additional information about the problem.\n Say when a login failed, then userId can be sent as part of the context."
        },
        "errorCode" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "client specific errorCode for automated systems to track"
        }
      }
    },
    "RateLimit" : {
      "id" : "RateLimit",
      "properties" : {
        "rateLimit" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Rate limit in this time window"
        },
        "message" : {
          "type" : "string"
        },
        "resetEpochSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "UTC epoch time in seconds when it will be reset"
        },
        "httpStatusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "errorCode" : {
          "type" : "string",
          "description" : "HTTP Status Code\n 429 Too Many Requests"
        },
        "rateLimitType" : {
          "type" : "string",
          "enum" : [ "TOO_MANY_REQUESTS", "TOO_MANY_CONCURRENT_REQUESTS" ]
        },
        "rateLimitUnit" : {
          "type" : "string",
          "description" : "Rate limitted time window time unit",
          "enum" : [ "NANOSECONDS", "MICROSECONDS", "MILLISECONDS", "SECONDS", "MINUTES", "HOURS", "DAYS" ]
        }
      }
    },
    "ClusterInfo" : {
      "id" : "ClusterInfo",
      "properties" : {
        "port" : {
          "type" : "string"
        },
        "host" : {
          "type" : "string"
        },
        "routeKey" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "Five9ExceptionDetailWrapper" : {
      "id" : "Five9ExceptionDetailWrapper",
      "properties" : {
        "exceptions" : {
          "type" : "Five9ExceptionDetail[]"
        }
      }
    },
    "Org" : {
      "id" : "Org",
      "properties" : {
        "orgId" : {
          "type" : "string"
        },
        "orgName" : {
          "type" : "string"
        }
      }
    },
    "PasswordCredentials" : {
      "id" : "PasswordCredentials",
      "properties" : {
        "username" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "tenantName" : {
          "type" : "string"
        }
      }
    },
    "Metadata" : {
      "id" : "Metadata",
      "properties" : {
        "updateTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "farmId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uIRouteKey" : {
          "type" : "string"
        },
        "activeDataCenter" : {
          "type" : "DataCenterInfo"
        },
        "streamRouteKey" : {
          "type" : "string"
        },
        "dataCenters" : {
          "type" : "array",
          "items" : {
            "$ref" : "DataCenterInfo"
          }
        },
        "context" : {
          "type" : "Map"
        },
        "aPIRouteKey" : {
          "type" : "string"
        },
        "freedomUrl" : {
          "type" : "string"
        }
      }
    },
    "Token" : {
      "id" : "Token",
      "properties" : {
        "orgId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tokenId" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        },
        "context" : {
          "type" : "Map"
        },
        "metadata" : {
          "type" : "Metadata"
        }
      }
    },
    "AnonUser" : {
      "id" : "AnonUser",
      "properties" : {
        "five9SessionId" : {
          "type" : "string"
        },
        "tenantName" : {
          "type" : "string"
        }
      }
    },
    "Five9ExceptionDetail" : {
      "id" : "Five9ExceptionDetail",
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "Error Message"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "UTC time in milliseconds"
        },
        "source" : {
          "type" : "string",
          "description" : "Use this to identify the source of the problem"
        },
        "context" : {
          "type" : "Map",
          "description" : "context: Map of string values to report additional information about the problem.\n Say when a login failed, then userId can be sent as part of the context."
        },
        "errorCode" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "client specific errorCode for automated systems to track"
        }
      }
    },
    "DataCenterInfo" : {
      "id" : "DataCenterInfo",
      "properties" : {
        "isActive" : {
          "type" : "boolean"
        },
        "apiUrls" : {
          "type" : "array",
          "items" : {
            "$ref" : "ClusterInfo"
          }
        },
        "name" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean"
        },
        "uiUrls" : {
          "type" : "array",
          "items" : {
            "$ref" : "ClusterInfo"
          }
        },
        "loginUrls" : {
          "type" : "array",
          "items" : {
            "$ref" : "ClusterInfo"
          }
        }
      }
    },
    "Auth" : {
      "id" : "Auth",
      "properties" : {
        "ssoToken" : {
          "type" : "string"
        },
        "passwordCredentials" : {
          "type" : "PasswordCredentials"
        },
        "policy" : {
          "type" : "string",
          "enum" : [ "ForceIn", "AttachExisting" ]
        },
        "org" : {
          "type" : "Org"
        },
        "appKey" : {
          "type" : "string"
        }
      }
    }
  }
}